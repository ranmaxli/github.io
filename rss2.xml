<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>研发博客</title>
    <link>https://ranmaxli.gitee.io/blog/</link>
    
    <image>
      <url>https://ranmaxli.gitee.io/blog/img/favicon.png</url>
      <title>研发博客</title>
      <link>https://ranmaxli.gitee.io/blog/</link>
    </image>
    
    <atom:link href="https://ranmaxli.gitee.io/blog/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>全心全意为人民服务</description>
    <pubDate>Wed, 18 Jan 2023 13:25:25 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>Hexo 博客优化——字体分子集加载</title>
      <link>https://ranmaxli.gitee.io/blog/post/Hexo-%E5%8D%9A%E5%AE%A2%E4%BC%98%E5%8C%96%E2%80%94%E2%80%94%E5%AD%97%E4%BD%93%E5%88%86%E5%AD%90%E9%9B%86%E5%8A%A0%E8%BD%BD/</link>
      <guid>https://ranmaxli.gitee.io/blog/post/Hexo-%E5%8D%9A%E5%AE%A2%E4%BC%98%E5%8C%96%E2%80%94%E2%80%94%E5%AD%97%E4%BD%93%E5%88%86%E5%AD%90%E9%9B%86%E5%8A%A0%E8%BD%BD/</guid>
      <pubDate>Wed, 18 Jan 2023 13:25:25 GMT</pubDate>
      
        
        
          
          
      <description>&lt;h2 id=&quot;前言&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#前言&quot;&gt;&lt;/a&gt; 前言&lt;/h2&gt;
&lt;p&gt;最近看到越来越多的网站使用字体分段加载（貌似都白嫖的B站）&lt;br /&gt;
不过博主找了半天，也是没有找到字体切片的相关文章&lt;br</description>
          
        
      
      
      
      <content:encoded><![CDATA[<h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2><p>最近看到越来越多的网站使用字体分段加载（貌似都白嫖的B站）<br />不过博主找了半天，也是没有找到字体切片的相关文章<br />所以就手搓了一个…</p><blockquote><p>博主也去了解了下字体切片原理，看起来就是把一个字体内的文字打散，分成很多个文件，浏览器需要的时候加载对应文件<br />（谷歌字体有篇文章: 貌似写着这样可以减少大约30%的加载大小）</p></blockquote><p>tips: 手搓完成后，我受到了巨大的打击，因为别人告诉我Github上有（不过我去看了下，貌似不全）</p><h2 id="开始"><a class="markdownIt-Anchor" href="#开始"></a> 开始</h2><blockquote><p>准备材料: <code>一台PC</code>， <code>Python 3.7</code> 及以上环境(博主是<code>Python 3.9</code>)<br />如果没有环境或者遇到问题(<s>或者不会</s>)可以在侧边栏公告那里加入博客群聊，寻求帮助</p></blockquote><h3 id="安装依赖"><a class="markdownIt-Anchor" href="#安装依赖"></a> 安装依赖</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install fonttools Brotli</span><br></pre></td></tr></table></figure><h3 id="准备运行时环境"><a class="markdownIt-Anchor" href="#准备运行时环境"></a> 准备运行时环境</h3><p>然后新建一个文件夹(程序运行时会生成缓存文件)<br />比如 <code>font</code></p><p>然后把要转换的 <code>TTF</code> 格式字体复制粘贴进去</p><p>新建一个 <code>.py</code> 文件，把以下代码丢进去</p><figure class="highlight python"><figcaption><span>main.py</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os, json</span><br><span class="line"><span class="keyword">from</span> fontTools.ttLib <span class="keyword">import</span> TTFont</span><br><span class="line"></span><br><span class="line">字体文件名称 = <span class="string">&quot;HarmonyOS_Sans_SC_Regular.ttf&quot;</span></span><br><span class="line">保存的字体文件名称 = <span class="string">&quot;HarmonyOS_Sans_SC_Regular_&quot;</span> <span class="comment"># 会在名称后加上第几个切片并以.woff2结尾</span></span><br><span class="line">字体切片字数 = <span class="number">2500</span> <span class="comment"># 多少个字打包成一个文件</span></span><br><span class="line">css_font_family = <span class="string">&quot;HarmonyOS Sans SC Regular&quot;</span> <span class="comment"># css的字体家族</span></span><br><span class="line">css_font_family_first = <span class="string">&#x27;local(&quot;HarmonyOS Sans SC Regular&quot;), local(&quot;HarmonyOS Sans SC&quot;), &#x27;</span> <span class="comment"># 如果你不知道这是干什么的，请设置为&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;正在加载字体文件......&quot;</span>)</span><br><span class="line"><span class="comment"># 打开字体文件</span></span><br><span class="line"><span class="keyword">with</span> TTFont(字体文件名称 ) <span class="keyword">as</span> font:</span><br><span class="line">    <span class="comment"># 获取字体文件的数据</span></span><br><span class="line">    font_data = font.getGlyphOrder()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;加载字体文件成功&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 写入字体数据，方便调试</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;data.json&quot;</span>, <span class="string">&quot;w&quot;</span>, encoding=<span class="string">&quot;utf-8&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    writer_json = json.dumps(font_data, ensure_ascii=<span class="literal">False</span>, indent=<span class="number">2</span>)</span><br><span class="line">    f.write(writer_json)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;正在生成数据......&quot;</span>)</span><br><span class="line"><span class="comment"># 字体所有文字</span></span><br><span class="line">font_unicodes = []</span><br><span class="line"></span><br><span class="line"><span class="comment"># 遍历字体数据</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> font_data:</span><br><span class="line">    <span class="comment"># 判断数据开头是不是uni</span></span><br><span class="line">    <span class="keyword">if</span> i.startswith(<span class="string">&quot;uni&quot;</span>):</span><br><span class="line">        <span class="comment"># 插入数据</span></span><br><span class="line">        font_unicodes.append(i)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 写入字体数据，方便调试</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;data1.json&quot;</span>, <span class="string">&quot;w&quot;</span>, encoding=<span class="string">&quot;utf-8&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    writer_json = json.dumps(font_unicodes, ensure_ascii=<span class="literal">False</span>, indent=<span class="number">2</span>)</span><br><span class="line">    f.write(writer_json)</span><br><span class="line">    writer_json = []</span><br><span class="line"></span><br><span class="line"><span class="comment"># 切割列表</span></span><br><span class="line">font_unicodes = [font_unicodes[i:i + 字体切片字数] <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(font_unicodes), 字体切片字数)]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 写入字体数据，方便调试</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;data2.json&quot;</span>, <span class="string">&quot;w&quot;</span>, encoding=<span class="string">&quot;utf-8&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    writer_json = json.dumps(font_unicodes, ensure_ascii=<span class="literal">False</span>, indent=<span class="number">2</span>)</span><br><span class="line">    f.write(writer_json)</span><br><span class="line">    writer_json = []</span><br><span class="line"></span><br><span class="line"><span class="comment"># 取刚刚生成的数据，列表中的列表的范围</span></span><br><span class="line">unicodes = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> font_unicodes:</span><br><span class="line">    start_key = i[<span class="number">0</span>].replace(<span class="string">&quot;uni&quot;</span>, <span class="string">&quot;&quot;</span>)</span><br><span class="line">    end_key = i[-<span class="number">1</span>].replace(<span class="string">&quot;uni&quot;</span>, <span class="string">&quot;&quot;</span>)</span><br><span class="line">    unicodes.append(<span class="string">f&quot;U+<span class="subst">&#123;start_key&#125;</span>-<span class="subst">&#123;end_key&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;data3.json&quot;</span>, <span class="string">&quot;w&quot;</span>, encoding=<span class="string">&quot;utf-8&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    writer_json = json.dumps(unicodes, ensure_ascii=<span class="literal">False</span>, indent=<span class="number">2</span>)</span><br><span class="line">    f.write(writer_json)</span><br><span class="line">    writer_json = []</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;数据生成成功，开始转换！&quot;</span>)</span><br><span class="line"></span><br><span class="line">列表长度 = <span class="built_in">len</span>(unicodes)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;列表长度: <span class="subst">&#123;列表长度&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line">raw_css = <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(列表长度):</span><br><span class="line">    当前字符集 = unicodes[i]</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;正在处理字符集 <span class="subst">&#123;当前字符集&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># if isinstance(当前字符集, list):</span></span><br><span class="line">    <span class="comment">#     print(&quot;正在合并当前子集......&quot;)</span></span><br><span class="line">    <span class="comment">#     当前字符集 = &#x27;,&#x27;.join(map(str, 当前字符集))</span></span><br><span class="line">    <span class="comment">#     print(f&quot;合并结果： &#123;当前字符集&#125;&quot;)</span></span><br><span class="line"></span><br><span class="line">    字体保存目录 = <span class="string">f&quot;./fonts/<span class="subst">&#123;保存的字体文件名称&#125;</span><span class="subst">&#123;i&#125;</span>.woff2&quot;</span></span><br><span class="line">    命令 = <span class="string">f&#x27;pyftsubset <span class="subst">&#123;字体文件名称&#125;</span> --unicodes=&quot;<span class="subst">&#123;当前字符集&#125;</span>&quot; --output-file=&quot;<span class="subst">&#123;字体保存目录&#125;</span>&quot; --flavor=&quot;woff2&#x27;</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;执行命令: <span class="subst">&#123;命令&#125;</span>&quot;</span>)</span><br><span class="line">    <span class="comment"># U+........</span></span><br><span class="line">    os.system(命令)</span><br><span class="line"></span><br><span class="line">    raw_css = raw_css + <span class="string">f&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">@font-face &#123;&#123;</span></span><br><span class="line"><span class="string">    font-family: &quot;<span class="subst">&#123;css_font_family&#125;</span>&quot;;</span></span><br><span class="line"><span class="string">    font-style: normal;</span></span><br><span class="line"><span class="string">    /* font-weight: 400; */</span></span><br><span class="line"><span class="string">    font-display: swap;</span></span><br><span class="line"><span class="string">    src: <span class="subst">&#123;css_font_family_first&#125;</span>url(&quot;<span class="subst">&#123;字体保存目录&#125;</span>&quot;) format(&quot;woff2&quot;);</span></span><br><span class="line"><span class="string">    unicode-range: <span class="subst">&#123;当前字符集&#125;</span></span></span><br><span class="line"><span class="string">&#125;&#125;</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span> <span class="comment"># css生成模板</span></span><br><span class="line"></span><br><span class="line">raw_css = raw_css + <span class="string">f&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">body &#123;&#123;</span></span><br><span class="line"><span class="string">    /* 设置字体 */</span></span><br><span class="line"><span class="string">    font-family: &quot;<span class="subst">&#123;css_font_family&#125;</span>&quot;, sans-serif !important;</span></span><br><span class="line"><span class="string">&#125;&#125;</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;font.css&quot;</span>, <span class="string">&quot;w&quot;</span>, encoding=<span class="string">&quot;utf-8&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f.write(raw_css)</span><br></pre></td></tr></table></figure><p>然后在文件开头修改配置，配置干嘛的都注释好了</p><p>看到这里想必各位是不是马上准备双击运行了，<br />但我想说一句还要在文件夹内新建个 <code>fonts</code> 文件夹，存放生成的字体文件。</p><p>然后就可以愉快的双击运行了，</p><blockquote><p>（tips: 建议运行时看着，因为程序逻辑问题有时候报错不会退出）</p></blockquote><p>结束后你就会在这个文件夹内找到个 <code>font.css</code> 和有一堆字体切片文件的 <code>fonts</code> 文件夹</p><p>这些东西想必大家都知道是干嘛用的<br />把 <code>font.css</code> 和 <code>font</code>文件夹 放在你的cdn里的同一个目录里，<br />然后主题引入下css<br />就可以开始游玩了</p><blockquote><p>tips:<br />字体css建议使用用异步加载</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;你的cssURL&quot;</span> <span class="attr">media</span>=<span class="string">&quot;defer&quot;</span> <span class="attr">onload</span>=<span class="string">&quot;this.media=&#x27;all&#x27;&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      
      <category domain="https://ranmaxli.gitee.io/blog/tags/Butterfly/">Butterfly</category>
      
      <category domain="https://ranmaxli.gitee.io/blog/tags/%E4%BC%98%E5%8C%96/">优化</category>
      
      <category domain="https://ranmaxli.gitee.io/blog/tags/Python/">Python</category>
      
      
      <comments>https://ranmaxli.gitee.io/blog/post/Hexo-%E5%8D%9A%E5%AE%A2%E4%BC%98%E5%8C%96%E2%80%94%E2%80%94%E5%AD%97%E4%BD%93%E5%88%86%E5%AD%90%E9%9B%86%E5%8A%A0%E8%BD%BD/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>2023：新年快乐！！！</title>
      <link>https://ranmaxli.gitee.io/blog/post/2023%EF%BC%9A%E6%96%B0%E5%B9%B4%E5%BF%AB%E4%B9%90%EF%BC%81%EF%BC%81%EF%BC%81/</link>
      <guid>https://ranmaxli.gitee.io/blog/post/2023%EF%BC%9A%E6%96%B0%E5%B9%B4%E5%BF%AB%E4%B9%90%EF%BC%81%EF%BC%81%EF%BC%81/</guid>
      <pubDate>Sat, 31 Dec 2022 16:01:00 GMT</pubDate>
      
        
        
          
          
      <description>&lt;h1 id=&quot;回忆2022&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#回忆2022&quot;&gt;&lt;/a&gt;</description>
          
        
      
      
      
      <content:encoded><![CDATA[<h1 id="回忆2022"><a class="markdownIt-Anchor" href="#回忆2022"></a> 回忆2022</h1><ol><li>本站在2022切换为了Hexo博客系统，并使用Butterfly主题</li></ol><p>不过因为作者学业原因，更新较慢</p><h1 id="展望2023"><a class="markdownIt-Anchor" href="#展望2023"></a> 展望2023</h1><ul><li><p>[ ] Hexosm预计将在2023年寒假结束前发布第一个正式版</p></li><li><p>[ ] 准备搞个游戏(内部游玩)大概叫做天理回议录/启示录</p></li></ul><h1 id="祝福"><a class="markdownIt-Anchor" href="#祝福"></a> 祝福</h1><p>希望大家2023年幸福，也希望2023年新冠疫情不在肆虐，也祝福大家过个好年</p><p>祝大家新年快乐—————</p><p>(<s>词穷</s>，第一次写这种东西，不会写，不喜勿喷)</p>]]></content:encoded>
      
      
      
      
      <comments>https://ranmaxli.gitee.io/blog/post/2023%EF%BC%9A%E6%96%B0%E5%B9%B4%E5%BF%AB%E4%B9%90%EF%BC%81%EF%BC%81%EF%BC%81/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>让你五分钟学会手搓SW</title>
      <link>https://ranmaxli.gitee.io/blog/post/%E8%AE%A9%E4%BD%A0%E4%BA%94%E5%88%86%E9%92%9F%E5%AD%A6%E4%BC%9A%E6%89%8B%E6%90%93SW/</link>
      <guid>https://ranmaxli.gitee.io/blog/post/%E8%AE%A9%E4%BD%A0%E4%BA%94%E5%88%86%E9%92%9F%E5%AD%A6%E4%BC%9A%E6%89%8B%E6%90%93SW/</guid>
      <pubDate>Fri, 30 Dec 2022 10:21:30 GMT</pubDate>
      
        
        
          
          
      <description>&lt;h1 id=&quot;关于service-worker&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#关于service-worker&quot;&gt;&lt;/a&gt; 关于Service Worker&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;Service Worker&lt;/code&gt;</description>
          
        
      
      
      
      <content:encoded><![CDATA[<h1 id="关于service-worker"><a class="markdownIt-Anchor" href="#关于service-worker"></a> 关于Service Worker</h1><p><code>Service Worker</code> 是浏览器的一个高级特性，本质是一个 <code>Web Worker</code> ，是独立于网页运行的脚本。 <code>Web Worker</code> 这个api被造出来时，就是为了解放主线程。因为，浏览器中的 <code>JavaScript</code> 都是运行在单一个线程上，随着web业务变得越来越复杂，js中耗时间、耗资源的运算过程则会导致各种程度的性能问题。 而Web Worker由于独立于主线程，则可以将一些复杂的逻辑交由它来去做，完成后再通过 <code>postMessage</code> 的方法告诉主线程。 <code>Service Worker</code> 则是 <code>Web Worker</code> 的升级版本，相较于后者，前者拥有了持久离线缓存的能力。</p><p><code>Service Workers</code> 本质上充当 <code>Web</code> 应用程序、浏览器与网络（可用时）之间的代理服务器。这个 <code>API</code> 旨在创建有效的离线体验，它会拦截网络请求并根据网络是否可用来采取适当的动作、更新来自服务器的的资源。它还提供入口以推送通知和访问后台同步 <code>API</code> 。</p><p><code>Service Worker</code> 运行在 <code>Worker</code> 上下文，因此它不能访问 DOM。相对于驱动应用的主 <code>JavaScript</code> 线程，它运行在其他线程中，所以不会造成阻塞。它设计为完全异步，同步 <code>API</code>（如<code>XHR</code>和<code>localStorage</code>）不能在 <code>Service Worker</code> 中使用。</p><blockquote><p><code>Service Worker</code>下文简称<code>SW</code><br />上文是较为科学的解释，对我来说他的用处只有一个<br />就是加速博客</p></blockquote><h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1><p>因为作者看到好多人的博客都用上了SW。</p><p>而且博主<s>万年没更新了</s>（<s>其实是因为没时间</s>）</p><p>所以准备<s>水</s>一篇文章。</p><p>本文应该只需要懂js基础的小白即可看懂（没有js基础应该也可以明白原理）</p><p>但建议配合MDN食用</p><div class="tag link"><a class="link-card" title="MDN" href="https://developer.mozilla.org/zh-CN/docs/Web/API/Service_Worker_API"><div class="left"><img src="/img/link.png"/></div><div class="right"><p class="text">MDN</p><p class="url">https://developer.mozilla.org/zh-CN/docs/Web/API/Service_Worker_API</p></div></a></div><p>本人不保证本文没有任何错误，<br />本文旨在教学/科普那想搞sw的人</p><p>本文是根据个人理解所写，不保证完全正确</p><h1 id="正文"><a class="markdownIt-Anchor" href="#正文"></a> 正文</h1><h2 id="sw的组成状态"><a class="markdownIt-Anchor" href="#sw的组成状态"></a> SW的组成(状态)</h2><blockquote><p>出于安全考量，Service workers 只能由 HTTPS 承载，毕竟修改网络请求的能力暴露给中间人攻击会非常危险。<br />但在本地的 <code>localhost</code> 和 <code>127.0.0.1</code> 是可以使用的（为了方便本地调试）</p></blockquote><p>SW一共有很多种状态，但我们只需要知道其中4个（其他的基本上用不到）</p><ol><li><p>install 安装</p></li><li><p>waiting 等待</p></li><li><p>activate 激活</p></li><li><p>fetch (额，这玩意我也不知道叫啥，大概可以算是请求)</p></li></ol><p>SW在通过安装代码的注册方法 <code>navigator.serviceWorker.register()</code> 后<br />会下载SW代码<br />然后进入<code>install</code>状态<br />如果不是首次使用sw他就会卡在<code>waiting</code>状态<br />需要等待上一个sw停止工作<br />此时我们就要执行 <code>self.skipWaiting()</code> 来跳过<br />然后就会进入<code>activate</code> 状态<br />首次使用sw的时候，并不会直接捕获当前页面的请求<br />我们可以执行 <code>self.clients.claim()</code> 来立即管理当前页面（或者你安装的时候直接刷新也能达到此目的）</p><h3 id="监听sw状态"><a class="markdownIt-Anchor" href="#监听sw状态"></a> 监听SW状态</h3><p>我们将会在我们手搓的sw中使用 <code>addEventListener()</code> （事件监听器）方法来监听SW的状态</p><blockquote><p>注意:<br />在SW中可以用 <code>this</code> 来表示这个SW<br />在SW中食用的事件监听器是属于异步的，建议直接使用<code>async function</code></p></blockquote><p>然后就可以有如下操作</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 注：async () =&gt; &#123;&#125; 等同于 async function () &#123;&#125;</span></span><br><span class="line">self.<span class="title function_">addEventListener</span>(<span class="string">&#x27;install&#x27;</span>, <span class="keyword">async</span> () =&gt; &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;[SW] 注册成功!&#x27;</span>);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;[SW] 跳过等待!&#x27;</span>);</span><br><span class="line">    <span class="comment">// 跳过等待</span></span><br><span class="line">    <span class="comment">// skipWaiting 停止当前的service work 运行最新的serviceworker</span></span><br><span class="line">    <span class="comment">// waitUntil skipWaiting返回的是promise 等primise执行完后 在进行下一个生命周期函数</span></span><br><span class="line">    <span class="comment">// 这里要注意 self.skipWaiting() 算是个异步函数</span></span><br><span class="line">    <span class="comment">// 如果这是个同步函数你可能需要用 event.waitUntil() 把他包裹</span></span><br><span class="line">    <span class="comment">// 就像这样 event.waitUntil(self.skipWaiting())</span></span><br><span class="line">    <span class="keyword">await</span> self.<span class="title function_">skipWaiting</span>();</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">self.<span class="title function_">addEventListener</span>(<span class="string">&#x27;activate&#x27;</span>, <span class="keyword">async</span> () =&gt; &#123;</span><br><span class="line">    <span class="comment">// console.log(&#x27;[SW] 跳过等待!&#x27;)</span></span><br><span class="line">    <span class="comment">// await self.skipWaiting();</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;[SW] 激活成功!&#x27;</span>)</span><br><span class="line">    <span class="comment">// 立即管理页面</span></span><br><span class="line">    <span class="keyword">await</span> self.<span class="property">clients</span>.<span class="title function_">claim</span>();</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;[SW] 立即管理请求!&#x27;</span>)</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><blockquote><p>下面的捕获请求也需要用到上面的知识</p></blockquote><h2 id="捕获请求"><a class="markdownIt-Anchor" href="#捕获请求"></a> 捕获请求</h2><p>在学会捕获请求之前</p><p>你还需要知道一个新的东西</p><p><code>fetch()</code> 方法</p><p>这玩意的功能就类似于 <code>XHR</code> ( <code>XmlHTTPRequest</code> )</p><blockquote><p>值得一提的是使用 <code>Fetch</code> API 发送请求是会存在跨域问题的，一旦被跨域拦截，那么就上面都没有返回，会导致页面显示不了请求的内容(例如图片被跨域拦截了)，而 img、script 标签它们是不会发生跨域请求问题的。</p></blockquote><p>这玩意的MDN如下（虽然没必要看，因为搞sw不用管它的参数，基本上）</p><div class="tag link"><a class="link-card" title="fetchMDN" href="https://developer.mozilla.org/zh-CN/docs/Web/API/Fetch_API"><div class="left"><img src="/img/link.png"/></div><div class="right"><p class="text">fetchMDN</p><p class="url">https://developer.mozilla.org/zh-CN/docs/Web/API/Fetch_API</p></div></a></div><p>随便的学习了一波Fetch之后，我们就可以开始最激动人心的捕获请求环节</p><p>根据上上面的文章我们可以知道 <code>SW</code> 还有个 <code>Fetch</code> 状态</p><p>然后就可以有如下操作</p><blockquote><p>注:<br /><code>event.respondWith()</code>: 给浏览器一个响应，因为我们已经使用<code>Fetch</code> API替浏览器发送了请求，并且得到了结果并且返回，那么自然是要返回给浏览器啦<br />当捕获的请求没有通过这个方法返回数据，浏览器就会假装sw不存在，使用默认的获取方法<br />而且当返回的数据不正确(比如发生跨域)的时候浏览器也默认跳过</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 捕获请求</span></span><br><span class="line">self.<span class="title function_">addEventListener</span>(<span class="string">&#x27;fetch&#x27;</span>, <span class="keyword">async</span> (event) =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> request = <span class="title function_">handleRequest</span>(event.<span class="property">request</span>);</span><br><span class="line">    <span class="comment">// 如果有返回，就返回请求</span></span><br><span class="line">    <span class="comment">// 如果没有返回就什么也不做</span></span><br><span class="line">    <span class="keyword">if</span> (request) &#123;</span><br><span class="line">        event.<span class="title function_">respondWith</span>(request);</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="篡改请求"><a class="markdownIt-Anchor" href="#篡改请求"></a> 篡改请求</h2><p>上面我们都可以使用<code>Fetch</code> API替浏览器发送请求了，那是不是可以篡改呢？</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 处理请求</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">handleRequest</span>(<span class="params">req</span>) &#123;</span><br><span class="line">  <span class="comment">// 仅仅只是举个例子，更多奇妙的用法等待你去探索</span></span><br><span class="line">  <span class="keyword">const</span> str = <span class="string">&#x27;https://cdn.jsdelivr.net/npm/xhr-ajax/dist/&#x27;</span></span><br><span class="line">  <span class="keyword">const</span> url = req.<span class="property">url</span>.<span class="title function_">replace</span>(str + <span class="string">&#x27;ajax.js&#x27;</span>, str + <span class="string">&#x27;ajax.min.js&#x27;</span>)</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">fetch</span>(url)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如上代码，我们就可以将 ajax 请求的第三方库 js 文件请求变为压缩后的请求，并返回给浏览器(篡改成功)</p><p>这边还有个前端资源并发的列子<br />也就是最重要的jsd并发竞速</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 发送所有请求</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">fetchAny</span>(<span class="params">urls</span>) &#123;</span><br><span class="line">    <span class="comment">// 中断一个或多个请求</span></span><br><span class="line">    <span class="comment">// 其实是获取当前方法发起的fetch请求</span></span><br><span class="line">    <span class="comment">// 然后在下文打断</span></span><br><span class="line">    <span class="keyword">const</span> controller = <span class="keyword">new</span> <span class="title class_">AbortController</span>()</span><br><span class="line">    <span class="keyword">const</span> signal = controller.<span class="property">signal</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 遍历将所有的请求地址转换为promise</span></span><br><span class="line">    <span class="keyword">const</span> <span class="title class_">PromiseAll</span> = urls.<span class="title function_">map</span>(<span class="function">(<span class="params">url</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">// Promise的构造函数接收两个参数：resolve和reject（可以省略）。</span></span><br><span class="line">        <span class="comment">// 其中resolve是用来标记代码执行成功的，用法为resolve(args)，</span></span><br><span class="line">        <span class="comment">// 传进去的参数我们后面再说。相反，reject就是用来标记代码执行错误，用法为reject(args)。</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="title function_">fetch</span>(url, &#123; signal &#125;)</span><br><span class="line">                <span class="comment">// 返回响应</span></span><br><span class="line">                .<span class="title function_">then</span>(progress)</span><br><span class="line">                <span class="comment">// 检查请求是否成功</span></span><br><span class="line">                .<span class="title function_">then</span>(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">                    <span class="comment">// 克隆请求</span></span><br><span class="line">                    <span class="keyword">const</span> r = res.<span class="title function_">clone</span>()</span><br><span class="line">                    <span class="keyword">if</span> (r.<span class="property">status</span> !== <span class="number">200</span>) <span class="title function_">reject</span>(<span class="literal">null</span>)</span><br><span class="line">                    controller.<span class="title function_">abort</span>() <span class="comment">// 中断</span></span><br><span class="line">                    <span class="comment">// 返回请求</span></span><br><span class="line">                    <span class="title function_">resolve</span>(r)</span><br><span class="line">                &#125;)</span><br><span class="line">                .<span class="title function_">catch</span>(<span class="function">() =&gt;</span> <span class="title function_">reject</span>(<span class="literal">null</span>));</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 判断浏览器是否支持 Promise.any</span></span><br><span class="line">    <span class="comment">// 如果不支持就执行上面的方法</span></span><br><span class="line">    <span class="comment">// 虽然给我砍掉了</span></span><br><span class="line">    <span class="comment">// if (!Promise.any) createPromiseAny()</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 谁先返回&quot;成功状态&quot;则返回谁的内容，如果都返回&quot;失败状态&quot;则返回null</span></span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">any</span>(<span class="title class_">PromiseAll</span>)</span><br><span class="line">        .<span class="title function_">then</span>(<span class="function">(<span class="params">res</span>) =&gt;</span> res)</span><br><span class="line">        .<span class="title function_">catch</span>(<span class="function">() =&gt;</span> <span class="literal">null</span>);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>然后在手搓一点点的匹配代码<br />然后你就成功的搞出sw了</p><p>以下代码不能直接复制运行<br />因为没配置<br />大概能实现cw的功能<br />但没缓存功能</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 处理请求</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">handleRequest</span>(<span class="params">req</span>) &#123;</span><br><span class="line">    <span class="comment">// 请求url的数组</span></span><br><span class="line">    <span class="keyword">const</span> urls = [];</span><br><span class="line">    <span class="keyword">const</span> urlStr = req.<span class="property">url</span>;</span><br><span class="line">    <span class="comment">// let urlObj = new URL(urlStr)</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 劫持请求</span></span><br><span class="line">    <span class="keyword">if</span> (configs[<span class="string">&#x27;redirect&#x27;</span>]) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> redirect <span class="keyword">of</span> configs[<span class="string">&#x27;redirect&#x27;</span>]) &#123;</span><br><span class="line">            <span class="keyword">if</span> (redirect[<span class="string">&#x27;rule&#x27;</span>].<span class="title function_">test</span>(urlStr)) &#123;</span><br><span class="line">                <span class="keyword">const</span> replaceurl = urlStr.<span class="title function_">replace</span>(redirect[<span class="string">&#x27;rule&#x27;</span>], redirect[<span class="string">&#x27;repalce&#x27;</span>])</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">debug</span>(<span class="string">`[SW] 请求 <span class="subst">$&#123;urlStr&#125;</span> 匹配到劫持规则！ URL被替换成 <span class="subst">$&#123;replaceurl&#125;</span>`</span>)</span><br><span class="line">                <span class="keyword">return</span> <span class="title function_">fetchOne</span>(replaceurl)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 匹配请求</span></span><br><span class="line">    <span class="keyword">if</span> (configs[<span class="string">&#x27;cdn&#x27;</span>]) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> cdn <span class="keyword">of</span> configs[<span class="string">&#x27;cdn&#x27;</span>]) &#123;</span><br><span class="line">            <span class="comment">// 正则匹配url</span></span><br><span class="line">            <span class="keyword">if</span> (cdn[<span class="string">&#x27;rule&#x27;</span>].<span class="title function_">test</span>(urlStr)) &#123;</span><br><span class="line">                <span class="keyword">let</span> rule_search = cdn[<span class="string">&#x27;search&#x27;</span>] || cdn[<span class="string">&#x27;rule&#x27;</span>]; <span class="comment">// 当search字段不存在时设置默认值</span></span><br><span class="line">                <span class="keyword">if</span> (rule_search == <span class="string">&#x27;_&#x27;</span>) &#123;</span><br><span class="line">                    <span class="comment">// 当为语法糖时重新赋值为rule</span></span><br><span class="line">                    rule_search = cdn[<span class="string">&#x27;rule&#x27;</span>];</span><br><span class="line">                &#125;;</span><br><span class="line">                <span class="comment">// 遍历替换</span></span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">let</span> search_replace <span class="keyword">of</span> cdn[<span class="string">&#x27;replace&#x27;</span>]) &#123;</span><br><span class="line">                    <span class="keyword">let</span> push_url_str</span><br><span class="line">                    <span class="keyword">if</span> (search_replace == <span class="string">&#x27;_&#x27;</span>) &#123;</span><br><span class="line">                        <span class="comment">// 当为语法糖时重新赋值</span></span><br><span class="line">                        push_url_str = urlStr;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        push_url_str = urlStr.<span class="title function_">replace</span>(rule_search, search_replace)</span><br><span class="line">                    &#125;;</span><br><span class="line">                    urls.<span class="title function_">push</span>(push_url_str);</span><br><span class="line">                &#125;;</span><br><span class="line">            &#125;;</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">warn</span>(<span class="string">&#x27;[SW] 警告: 配置未包含cdn配置项!&#x27;</span>);</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 如果上方 cdn 遍历 匹配到 cdn 则直接统一发送请求(不会往下执行了)</span></span><br><span class="line">    <span class="keyword">if</span> (urls.<span class="property">length</span>) <span class="keyword">return</span> <span class="title function_">fetchAny</span>(urls)</span><br><span class="line"></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">debug</span>(<span class="string">`[SW] 请求 <span class="subst">$&#123;urlStr&#125;</span> 没有匹配到任何规则，跳过此次请求。`</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 让sw不拦截请求, 有没有无所谓。我习惯性加上</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>然后大概就可以手搓出个大概这样的sw</p><p>注意: 本代码不可以直接运行<br />需要搭配配置</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//安装进程</span></span><br><span class="line"><span class="comment">// 在sw中可以使用this或是self表示自身</span></span><br><span class="line">self.<span class="title function_">addEventListener</span>(<span class="string">&#x27;install&#x27;</span>, <span class="keyword">async</span> () =&gt; &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;[SW] 注册成功!&#x27;</span>);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;[SW] 跳过等待!&#x27;</span>);</span><br><span class="line">    <span class="comment">// 跳过等待</span></span><br><span class="line">    <span class="comment">// skipWaiting 停止当前的service work 运行最新的serviceworker</span></span><br><span class="line">    <span class="comment">// waitUntil skipWaiting返回的是promise 等primise执行完后 在进行下一个生命周期函数</span></span><br><span class="line">    <span class="keyword">await</span> self.<span class="title function_">skipWaiting</span>();</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">self.<span class="title function_">addEventListener</span>(<span class="string">&#x27;activate&#x27;</span>, <span class="keyword">async</span> () =&gt; &#123;</span><br><span class="line">    <span class="comment">// console.log(&#x27;[SW] 跳过等待!&#x27;)</span></span><br><span class="line">    <span class="comment">// await self.skipWaiting();</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;[SW] 激活成功!&#x27;</span>)</span><br><span class="line">    <span class="comment">// 立即管理页面</span></span><br><span class="line">    <span class="keyword">await</span> self.<span class="property">clients</span>.<span class="title function_">claim</span>();</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;[SW] 立即管理请求!&#x27;</span>)</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 捕获请求</span></span><br><span class="line">self.<span class="title function_">addEventListener</span>(<span class="string">&#x27;fetch&#x27;</span>, <span class="keyword">async</span> (event) =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> request = <span class="title function_">handleRequest</span>(event.<span class="property">request</span>);</span><br><span class="line">    <span class="comment">// 如果有返回，就返回请求</span></span><br><span class="line">    <span class="comment">// 如果没有返回就什么也不做</span></span><br><span class="line">    <span class="keyword">if</span> (request) &#123;</span><br><span class="line">        event.<span class="title function_">respondWith</span>(request);</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 返回响应</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">progress</span>(<span class="params">res</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Response</span>(<span class="keyword">await</span> res.<span class="title function_">arrayBuffer</span>(), &#123;</span><br><span class="line">        <span class="attr">status</span>: res.<span class="property">status</span>,</span><br><span class="line">        <span class="attr">headers</span>: res.<span class="property">headers</span></span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 处理请求</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">handleRequest</span>(<span class="params">req</span>) &#123;</span><br><span class="line">    <span class="comment">// 请求url的数组</span></span><br><span class="line">    <span class="keyword">const</span> urls = [];</span><br><span class="line">    <span class="keyword">const</span> urlStr = req.<span class="property">url</span>;</span><br><span class="line">    <span class="comment">// let urlObj = new URL(urlStr)</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 劫持请求</span></span><br><span class="line">    <span class="keyword">if</span> (configs[<span class="string">&#x27;redirect&#x27;</span>]) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> redirect <span class="keyword">of</span> configs[<span class="string">&#x27;redirect&#x27;</span>]) &#123;</span><br><span class="line">            <span class="keyword">if</span> (redirect[<span class="string">&#x27;rule&#x27;</span>].<span class="title function_">test</span>(urlStr)) &#123;</span><br><span class="line">                <span class="keyword">const</span> replaceurl = urlStr.<span class="title function_">replace</span>(redirect[<span class="string">&#x27;rule&#x27;</span>], redirect[<span class="string">&#x27;repalce&#x27;</span>])</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">debug</span>(<span class="string">`[SW] 请求 <span class="subst">$&#123;urlStr&#125;</span> 匹配到劫持规则！ URL被替换成 <span class="subst">$&#123;replaceurl&#125;</span>`</span>)</span><br><span class="line">                <span class="keyword">return</span> <span class="title function_">fetchOne</span>(replaceurl)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 匹配请求</span></span><br><span class="line">    <span class="keyword">if</span> (configs[<span class="string">&#x27;cdn&#x27;</span>]) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> cdn <span class="keyword">of</span> configs[<span class="string">&#x27;cdn&#x27;</span>]) &#123;</span><br><span class="line">            <span class="comment">// 正则匹配url</span></span><br><span class="line">            <span class="keyword">if</span> (cdn[<span class="string">&#x27;rule&#x27;</span>].<span class="title function_">test</span>(urlStr)) &#123;</span><br><span class="line">                <span class="keyword">let</span> rule_search = cdn[<span class="string">&#x27;search&#x27;</span>] || cdn[<span class="string">&#x27;rule&#x27;</span>]; <span class="comment">// 当search字段不存在时设置默认值</span></span><br><span class="line">                <span class="keyword">if</span> (rule_search == <span class="string">&#x27;_&#x27;</span>) &#123;</span><br><span class="line">                    <span class="comment">// 当为语法糖时重新赋值为rule</span></span><br><span class="line">                    rule_search = cdn[<span class="string">&#x27;rule&#x27;</span>];</span><br><span class="line">                &#125;;</span><br><span class="line">                <span class="comment">// 遍历替换</span></span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">let</span> search_replace <span class="keyword">of</span> cdn[<span class="string">&#x27;replace&#x27;</span>]) &#123;</span><br><span class="line">                    <span class="keyword">let</span> push_url_str</span><br><span class="line">                    <span class="keyword">if</span> (search_replace == <span class="string">&#x27;_&#x27;</span>) &#123;</span><br><span class="line">                        <span class="comment">// 当为语法糖时重新赋值</span></span><br><span class="line">                        push_url_str = urlStr;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        push_url_str = urlStr.<span class="title function_">replace</span>(rule_search, search_replace)</span><br><span class="line">                    &#125;;</span><br><span class="line">                    urls.<span class="title function_">push</span>(push_url_str);</span><br><span class="line">                &#125;;</span><br><span class="line">            &#125;;</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">warn</span>(<span class="string">&#x27;[SW] 警告: 配置未包含cdn配置项!&#x27;</span>);</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 如果上方 cdn 遍历 匹配到 cdn 则直接统一发送请求(不会往下执行了)</span></span><br><span class="line">    <span class="keyword">if</span> (urls.<span class="property">length</span>) <span class="keyword">return</span> <span class="title function_">fetchAny</span>(urls)</span><br><span class="line"></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">debug</span>(<span class="string">`[SW] 请求 <span class="subst">$&#123;urlStr&#125;</span> 没有匹配到任何规则，跳过此次请求。`</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 让sw不拦截请求, 有没有无所谓。</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 发送所有请求</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">fetchAny</span>(<span class="params">urls</span>) &#123;</span><br><span class="line">    <span class="comment">// 中断一个或多个请求</span></span><br><span class="line">    <span class="comment">// 其实是获取当前方法发起的fetch请求</span></span><br><span class="line">    <span class="comment">// 然后在下文打断</span></span><br><span class="line">    <span class="keyword">const</span> controller = <span class="keyword">new</span> <span class="title class_">AbortController</span>()</span><br><span class="line">    <span class="keyword">const</span> signal = controller.<span class="property">signal</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 遍历将所有的请求地址转换为promise</span></span><br><span class="line">    <span class="keyword">const</span> <span class="title class_">PromiseAll</span> = urls.<span class="title function_">map</span>(<span class="function">(<span class="params">url</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">// Promise的构造函数接收两个参数：resolve和reject（可以省略）。</span></span><br><span class="line">        <span class="comment">// 其中resolve是用来标记代码执行成功的，用法为resolve(args)，</span></span><br><span class="line">        <span class="comment">// 传进去的参数我们后面再说。相反，reject就是用来标记代码执行错误，用法为reject(args)。</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="title function_">fetch</span>(url, &#123; signal &#125;)</span><br><span class="line">                <span class="comment">// 返回响应</span></span><br><span class="line">                .<span class="title function_">then</span>(progress)</span><br><span class="line">                <span class="comment">// 检查请求是否成功</span></span><br><span class="line">                .<span class="title function_">then</span>(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">                    <span class="comment">// 克隆请求</span></span><br><span class="line">                    <span class="keyword">const</span> r = res.<span class="title function_">clone</span>()</span><br><span class="line">                    <span class="keyword">if</span> (r.<span class="property">status</span> !== <span class="number">200</span>) <span class="title function_">reject</span>(<span class="literal">null</span>)</span><br><span class="line">                    controller.<span class="title function_">abort</span>() <span class="comment">// 中断</span></span><br><span class="line">                    <span class="comment">// 返回请求</span></span><br><span class="line">                    <span class="title function_">resolve</span>(r)</span><br><span class="line">                &#125;)</span><br><span class="line">                .<span class="title function_">catch</span>(<span class="function">() =&gt;</span> <span class="title function_">reject</span>(<span class="literal">null</span>));</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 判断浏览器是否支持 Promise.any</span></span><br><span class="line">    <span class="comment">// 如果不支持就执行上面的方法</span></span><br><span class="line">    <span class="comment">// if (!Promise.any) createPromiseAny()</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 谁先返回&quot;成功状态&quot;则返回谁的内容，如果都返回&quot;失败状态&quot;则返回null</span></span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">any</span>(<span class="title class_">PromiseAll</span>)</span><br><span class="line">        .<span class="title function_">then</span>(<span class="function">(<span class="params">res</span>) =&gt;</span> res)</span><br><span class="line">        .<span class="title function_">catch</span>(<span class="function">() =&gt;</span> <span class="literal">null</span>);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">fetchOne</span>(<span class="params">url</span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">fetch</span>(url)</span><br><span class="line">        .<span class="title function_">then</span>(progress)</span><br><span class="line">        .<span class="title function_">then</span>(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="comment">// 克隆请求</span></span><br><span class="line">            <span class="keyword">const</span> r = res.<span class="title function_">clone</span>()</span><br><span class="line">            <span class="comment">// 检查请求是否成功</span></span><br><span class="line">            <span class="keyword">if</span> (r.<span class="property">status</span> !== <span class="number">200</span>) <span class="keyword">return</span> <span class="literal">null</span></span><br><span class="line">            <span class="comment">// 返回请求</span></span><br><span class="line">            <span class="keyword">return</span> r</span><br><span class="line">        &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="缓存请求"><a class="markdownIt-Anchor" href="#缓存请求"></a> 缓存请求</h2><p>派蒙: 前面的区域以后再来探索把~~</p><p>该区域正在施工中…</p>]]></content:encoded>
      
      
      
      
      <comments>https://ranmaxli.gitee.io/blog/post/%E8%AE%A9%E4%BD%A0%E4%BA%94%E5%88%86%E9%92%9F%E5%AD%A6%E4%BC%9A%E6%89%8B%E6%90%93SW/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Hexo-Butterfly Twikoo评论区美化</title>
      <link>https://ranmaxli.gitee.io/blog/post/Hexo-Butterfly-Twikoo%E8%AF%84%E8%AE%BA%E5%8C%BA%E7%BE%8E%E5%8C%96/</link>
      <guid>https://ranmaxli.gitee.io/blog/post/Hexo-Butterfly-Twikoo%E8%AF%84%E8%AE%BA%E5%8C%BA%E7%BE%8E%E5%8C%96/</guid>
      <pubDate>Tue, 13 Sep 2022 09:40:10 GMT</pubDate>
      
        
        
          
          
      <description>&lt;h1 id=&quot;前言&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#前言&quot;&gt;&lt;/a&gt; 前言&lt;/h1&gt;
&lt;p&gt;前几天，在给&lt;code&gt;AG</description>
          
        
      
      
      
      <content:encoded><![CDATA[<h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1><p>前几天，在给<code>AG bot</code>（作者的机器人）写原神功能的截图网页，因为作者不会css，所以开着教程网页，一边请教别人一边写网页。</p><p>直到昨天，我终于写完了，虽然不是特别好看。但好歹是自己写的，写完之后，感觉我这个小白也要变成小黑了。</p><p>今天刚好看见twikoo丑丑的，就想给他来个Butterfly风格的魔改（美化）</p><p>没想到不仅成功了还挺好看</p><blockquote><p>部分配色和代码，抄自heo的博客<br />样式只支持Hexo-Butterfly主题</p></blockquote><h1 id="css代码"><a class="markdownIt-Anchor" href="#css代码"></a> CSS代码</h1><p>只需要添加到外挂css里</p><p>魔改玩家都清楚咋添加外挂css的</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 声名部分变量 */</span></span><br><span class="line"><span class="selector-pseudo">:root</span> &#123;</span><br><span class="line">  <span class="attr">--cxl2020mc-radius</span>: <span class="number">7px</span>;</span><br><span class="line">  <span class="attr">--cxl2020mc-card-border-width</span>: <span class="number">1px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 浅色模式颜色 */</span></span><br><span class="line"><span class="selector-attr">[data-theme=light]</span> &#123;</span><br><span class="line">  <span class="attr">--cxl2020mc-border-color</span>: <span class="number">#e3e8f7</span>;</span><br><span class="line">  <span class="attr">--cxl2020mc-card-bg</span>: <span class="number">#fff</span>;</span><br><span class="line">  <span class="attr">--cxl2020mc-card-border</span>: <span class="number">#e3e8f7</span>;</span><br><span class="line">  <span class="attr">--style-border-always</span>: <span class="number">1px</span> solid <span class="built_in">var</span>(--cxl2020mc-card-border);</span><br><span class="line">  <span class="attr">--cxl2020mc-blue</span>: <span class="number">#425AEF</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 深色模式颜色 */</span></span><br><span class="line"><span class="selector-attr">[data-theme=dark]</span> &#123;</span><br><span class="line">  <span class="attr">--cxl2020mc-border-color</span>: <span class="number">#42444a</span>;</span><br><span class="line">  <span class="attr">--cxl2020mc-card-bg</span>: <span class="number">#1d1b26</span>;</span><br><span class="line">  <span class="attr">--cxl2020mc-card-border</span>: <span class="number">#42444a</span>;</span><br><span class="line">  <span class="attr">--style-border-always</span>: <span class="number">1px</span> solid <span class="built_in">var</span>(--cxl2020mc-card-border);</span><br><span class="line">  <span class="attr">--cxl2020mc-blue</span>: <span class="number">#0084FF</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 评论区评论大框 */</span></span><br><span class="line"><span class="selector-class">.twikoo</span> <span class="selector-class">.tk-comments-container</span>&gt;<span class="selector-class">.tk-comment</span> &#123;</span><br><span class="line">  <span class="comment">/* 内边距 */</span></span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">1rem</span>;</span><br><span class="line">  <span class="comment">/* 圆角 */</span></span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="built_in">var</span>(--cxl2020mc-radius);</span><br><span class="line">  <span class="comment">/* 背景颜色 */</span></span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">var</span>(--cxl2020mc-card-bg);</span><br><span class="line">  <span class="comment">/* 变动动画时长 */</span></span><br><span class="line">  <span class="attribute">transition</span>: .<span class="number">3s</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 浅色模式评论区评论大框 */</span></span><br><span class="line"><span class="selector-attr">[data-theme=light]</span> <span class="selector-class">.twikoo</span> <span class="selector-class">.tk-comments-container</span>&gt;<span class="selector-class">.tk-comment</span> &#123;</span><br><span class="line">  <span class="comment">/* 阴影 */</span></span><br><span class="line">  <span class="attribute">box-shadow</span>: <span class="built_in">var</span>(--card-box-shadow);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 浅色模式评论区评论大框阴影悬浮加深 */</span></span><br><span class="line"><span class="selector-attr">[data-theme=light]</span> <span class="selector-class">.twikoo</span> <span class="selector-class">.tk-comments-container</span>&gt;<span class="selector-class">.tk-comment</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="comment">/* 阴影（浅色模式突出层次感） */</span></span><br><span class="line">  <span class="attribute">box-shadow</span>: <span class="built_in">var</span>(--card-hover-box-shadow);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 黑暗模式评论区评论大框 */</span></span><br><span class="line"><span class="selector-attr">[data-theme=dark]</span> <span class="selector-class">.twikoo</span> <span class="selector-class">.tk-comments-container</span>&gt;<span class="selector-class">.tk-comment</span> &#123;</span><br><span class="line">  <span class="comment">/* 边框样式 */</span></span><br><span class="line">  <span class="attribute">border-style</span>: solid;</span><br><span class="line">  <span class="comment">/* 边框宽度 */</span></span><br><span class="line">  <span class="attribute">border-width</span>: <span class="built_in">var</span>(--cxl2020mc-card-border-width);</span><br><span class="line">  <span class="comment">/* 边框颜色 */</span></span><br><span class="line">  <span class="attribute">border-color</span>: <span class="built_in">var</span>(--cxl2020mc-card-border);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 设备信息 */</span></span><br><span class="line"><span class="selector-class">.twikoo</span> <span class="selector-class">.tk-extra</span> &#123;</span><br><span class="line">  <span class="comment">/* 圆角 */</span></span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="built_in">var</span>(--cxl2020mc-radius);</span><br><span class="line">  <span class="comment">/* 背景颜色 */</span></span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">var</span>(--cxl2020mc-card-bg);</span><br><span class="line">  <span class="comment">/* 内边距 */</span></span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0.4rem</span>;</span><br><span class="line">  <span class="comment">/* 底边距 */</span></span><br><span class="line">  <span class="attribute">margin-bottom</span>: <span class="number">1rem</span>;</span><br><span class="line">  <span class="comment">/* 变动动画时长 */</span></span><br><span class="line">  <span class="attribute">transition</span>: .<span class="number">3s</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 浅色模式设备信息 */</span></span><br><span class="line"><span class="selector-attr">[data-theme=light]</span> <span class="selector-class">.twikoo</span> <span class="selector-class">.tk-extra</span> &#123;</span><br><span class="line">  <span class="comment">/* 阴影 */</span></span><br><span class="line">  <span class="attribute">box-shadow</span>: <span class="built_in">var</span>(--card-box-shadow);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 浅色模式设备信息阴影悬浮加深 */</span></span><br><span class="line"><span class="selector-attr">[data-theme=light]</span> <span class="selector-class">.twikoo</span> <span class="selector-class">.tk-extra</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="comment">/* 阴影 */</span></span><br><span class="line">  <span class="attribute">box-shadow</span>: <span class="built_in">var</span>(--card-hover-box-shadow);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 黑暗模式设备信息 */</span></span><br><span class="line"><span class="selector-attr">[data-theme=dark]</span> <span class="selector-class">.twikoo</span> <span class="selector-class">.tk-extra</span> &#123;</span><br><span class="line">  <span class="comment">/* 边框样式 */</span></span><br><span class="line">  <span class="attribute">border-style</span>: solid;</span><br><span class="line">  <span class="comment">/* 边框宽度 */</span></span><br><span class="line">  <span class="attribute">border-width</span>: <span class="built_in">var</span>(--cxl2020mc-card-border-width);</span><br><span class="line">  <span class="comment">/* 边框颜色 */</span></span><br><span class="line">  <span class="attribute">border-color</span>: <span class="built_in">var</span>(--cxl2020mc-card-border);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 加载更多按钮 */</span></span><br><span class="line"><span class="selector-class">.twikoo</span> <span class="selector-class">.tk-expand</span> &#123;</span><br><span class="line">  <span class="comment">/* 圆角 */</span></span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="built_in">var</span>(--cxl2020mc-radius);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 浅色模式加载更多按钮 */</span></span><br><span class="line"><span class="selector-attr">[data-theme=light]</span> <span class="selector-class">.twikoo</span> <span class="selector-class">.tk-expand</span> &#123;</span><br><span class="line">  <span class="comment">/* 阴影 */</span></span><br><span class="line">  <span class="attribute">box-shadow</span>: <span class="built_in">var</span>(--card-box-shadow);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 浅色模式加载更多按钮（鼠标悬浮时） */</span></span><br><span class="line"><span class="selector-attr">[data-theme=light]</span> <span class="selector-class">.twikoo</span> <span class="selector-class">.tk-expand</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="comment">/* 阴影 */</span></span><br><span class="line">  <span class="attribute">box-shadow</span>: <span class="built_in">var</span>(--card-hover-box-shadow);</span><br><span class="line">  <span class="comment">/* 背景颜色 */</span></span><br><span class="line">  <span class="attribute">background-color</span>: <span class="built_in">var</span>(--btn-bg);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 黑暗模式加载更多按钮（鼠标悬浮时） */</span></span><br><span class="line"><span class="selector-attr">[data-theme=dark]</span> <span class="selector-class">.twikoo</span> <span class="selector-class">.tk-expand</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="comment">/* 背景颜色 */</span></span><br><span class="line">  <span class="attribute">background-color</span>: <span class="built_in">var</span>(--cxl2020mc-blue);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 黑暗模式加载更多按钮 */</span></span><br><span class="line"><span class="selector-attr">[data-theme=dark]</span> <span class="selector-class">.twikoo</span> <span class="selector-class">.tk-expand</span> &#123;</span><br><span class="line">  <span class="comment">/* 边框样式 */</span></span><br><span class="line">  <span class="attribute">border-style</span>: solid;</span><br><span class="line">  <span class="comment">/* 边框宽度 */</span></span><br><span class="line">  <span class="attribute">border-width</span>: <span class="built_in">var</span>(--cxl2020mc-card-border-width);</span><br><span class="line">  <span class="comment">/* 边框颜色 */</span></span><br><span class="line">  <span class="attribute">border-color</span>: <span class="built_in">var</span>(--cxl2020mc-card-border);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://ranmaxli.gitee.io/blog/categories/Hexo/">Hexo</category>
      
      <category domain="https://ranmaxli.gitee.io/blog/categories/Butterfly/">Butterfly</category>
      
      
      <category domain="https://ranmaxli.gitee.io/blog/tags/Hexo/">Hexo</category>
      
      <category domain="https://ranmaxli.gitee.io/blog/tags/Butterfly/">Butterfly</category>
      
      <category domain="https://ranmaxli.gitee.io/blog/tags/Twikoo/">Twikoo</category>
      
      
      <comments>https://ranmaxli.gitee.io/blog/post/Hexo-Butterfly-Twikoo%E8%AF%84%E8%AE%BA%E5%8C%BA%E7%BE%8E%E5%8C%96/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Hexo butterfly主题更新</title>
      <link>https://ranmaxli.gitee.io/blog/post/Hexo-butterfly%E4%B8%BB%E9%A2%98%E6%9B%B4%E6%96%B0/</link>
      <guid>https://ranmaxli.gitee.io/blog/post/Hexo-butterfly%E4%B8%BB%E9%A2%98%E6%9B%B4%E6%96%B0/</guid>
      <pubDate>Wed, 07 Sep 2022 00:55:25 GMT</pubDate>
      
        
        
          
          
      <description>&lt;h1 id=&quot;前言&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#前言&quot;&gt;&lt;/a&gt;</description>
          
        
      
      
      
      <content:encoded><![CDATA[<h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1><p>很久没去主题官网看了。</p><p>昨天发现主题又更新了新版本</p><p>因为我没有魔改主题，更新还算方便</p><p>魔改的更新就很麻烦</p><blockquote><p>本篇教程不教如何更新魔改主题，但可以利用git记录你的修改再更新主题</p></blockquote><h1 id="git直接更新主题"><a class="markdownIt-Anchor" href="#git直接更新主题"></a> Git直接更新主题</h1><blockquote><p>再说一遍，本篇教程不教如何更新魔改主题</p></blockquote><p>直接在主题目录下执行（<code>.git</code>文件夹要复制回去）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git pull</span><br></pre></td></tr></table></figure><p>如果你忘记你的<code>.git</code>文件夹去哪了</p><p>就直接删除主题，回到主题根目录重新拉取最新主题就行</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone <span class="literal">-b</span> master https://gitee.com/immyw/hexo<span class="literal">-theme-butterfly</span>.git themes/butterfly</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://ranmaxli.gitee.io/blog/categories/Hexo/">Hexo</category>
      
      <category domain="https://ranmaxli.gitee.io/blog/categories/Butterfly/">Butterfly</category>
      
      
      <category domain="https://ranmaxli.gitee.io/blog/tags/Hexo/">Hexo</category>
      
      <category domain="https://ranmaxli.gitee.io/blog/tags/Butterfly/">Butterfly</category>
      
      
      <comments>https://ranmaxli.gitee.io/blog/post/Hexo-butterfly%E4%B8%BB%E9%A2%98%E6%9B%B4%E6%96%B0/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>更新Hexo及插件版本</title>
      <link>https://ranmaxli.gitee.io/blog/post/%E6%9B%B4%E6%96%B0Hexo%E5%8F%8A%E6%8F%92%E4%BB%B6%E7%89%88%E6%9C%AC/</link>
      <guid>https://ranmaxli.gitee.io/blog/post/%E6%9B%B4%E6%96%B0Hexo%E5%8F%8A%E6%8F%92%E4%BB%B6%E7%89%88%E6%9C%AC/</guid>
      <pubDate>Wed, 07 Sep 2022 00:05:13 GMT</pubDate>
      
        
        
          
          
      <description>&lt;h1 id=&quot;前言&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#前言&quot;&gt;&lt;/a&gt; 前言&lt;/h1&gt;
&lt;p&gt;因为作者看不惯Hexo生成时的警告，然后听人说，更新到最新版本的Hexo能够解决此报错&lt;/p&gt;
&lt;h1 id=&quot;准备&quot;&gt;&lt;a</description>
          
        
      
      
      
      <content:encoded><![CDATA[<h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1><p>因为作者看不惯Hexo生成时的警告，然后听人说，更新到最新版本的Hexo能够解决此报错</p><h1 id="准备"><a class="markdownIt-Anchor" href="#准备"></a> 准备</h1><h2 id="备份"><a class="markdownIt-Anchor" href="#备份"></a> 备份</h2><p>进行重大改动的时候要备份的道理，应该都懂</p><p>我就不多说了。</p><h2 id="安装升级所需要的npm包"><a class="markdownIt-Anchor" href="#安装升级所需要的npm包"></a> 安装升级所需要的NPM包</h2><h3 id="清理npm缓存"><a class="markdownIt-Anchor" href="#清理npm缓存"></a> 清理NPM缓存</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm cache clean <span class="operator">-f</span></span><br></pre></td></tr></table></figure><h3 id="安装版本检测和升级工具全局安装"><a class="markdownIt-Anchor" href="#安装版本检测和升级工具全局安装"></a> 安装版本检测和升级工具（全局安装）</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install <span class="literal">-g</span> npm<span class="literal">-check</span></span><br><span class="line">npm install <span class="literal">-g</span> npm<span class="literal">-upgrade</span></span><br></pre></td></tr></table></figure><h1 id="更新全局软件包比如hexo"><a class="markdownIt-Anchor" href="#更新全局软件包比如hexo"></a> 更新全局软件包（比如Hexo）</h1><h2 id="检查全局软件包更新"><a class="markdownIt-Anchor" href="#检查全局软件包更新"></a> 检查全局软件包更新</h2><blockquote><p>更新有2种方法，方法一比较靠谱， 方法二比较简单</p><p>使用方法2就不用继续更新全局软件包了，但需要懂一点点英文</p></blockquote><h3 id="方法一"><a class="markdownIt-Anchor" href="#方法一"></a> 方法一</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm<span class="literal">-check</span> <span class="literal">-g</span></span><br></pre></td></tr></table></figure><h4 id="全局更新软件包"><a class="markdownIt-Anchor" href="#全局更新软件包"></a> 全局更新软件包</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm update -g</span><br></pre></td></tr></table></figure><h4 id="重新安装hexo更新"><a class="markdownIt-Anchor" href="#重新安装hexo更新"></a> 重新安装Hexo（更新）</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --global hexo</span><br></pre></td></tr></table></figure><h3 id="方法二"><a class="markdownIt-Anchor" href="#方法二"></a> 方法二</h3><p>使用交互式界面进行更新</p><p>需要懂一点点英文。</p><p>通过上下键可以移动光标，使用空格键可以选择需要处理的包，回车直接进行处理。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm<span class="literal">-check</span> <span class="literal">-g</span> <span class="literal">-u</span></span><br></pre></td></tr></table></figure><h1 id="更新hexo插件"><a class="markdownIt-Anchor" href="#更新hexo插件"></a> 更新Hexo插件</h1><p>进入博客根目录</p><p>刚刚的更新操作也可以在博客根目录进行</p><p>更新插件同样有2种方法</p><p>方法的不同点和刚刚一样</p><h2 id="方法一-2"><a class="markdownIt-Anchor" href="#方法一-2"></a> 方法一</h2><h3 id="检查更新"><a class="markdownIt-Anchor" href="#检查更新"></a> 检查更新</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm-check</span><br></pre></td></tr></table></figure><h3 id="更新packagejson一直回车即可"><a class="markdownIt-Anchor" href="#更新packagejson一直回车即可"></a> 更新package.json，一直回车即可</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm<span class="literal">-upgrade</span></span><br></pre></td></tr></table></figure><h3 id="更新hexo插件-2"><a class="markdownIt-Anchor" href="#更新hexo插件-2"></a> 更新Hexo插件</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm update --save</span><br></pre></td></tr></table></figure><h3 id="修复依赖问题没出现依赖冲突的话不执行也可以"><a class="markdownIt-Anchor" href="#修复依赖问题没出现依赖冲突的话不执行也可以"></a> 修复依赖问题(没出现依赖冲突的话不执行也可以)</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm audix</span><br></pre></td></tr></table></figure><h2 id="方法二-2"><a class="markdownIt-Anchor" href="#方法二-2"></a> 方法二</h2><h3 id="更新插件"><a class="markdownIt-Anchor" href="#更新插件"></a> 更新插件</h3><p>通过上下键可以移动光标，使用空格键可以选择需要处理的包，回车直接进行处理。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm<span class="literal">-check</span> <span class="literal">-u</span></span><br></pre></td></tr></table></figure><h3 id="更新packagejson一直回车即可-2"><a class="markdownIt-Anchor" href="#更新packagejson一直回车即可-2"></a> 更新package.json，一直回车即可</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm-upgrade</span><br></pre></td></tr></table></figure><h3 id="修复依赖冲突如果没有的话可以不执行"><a class="markdownIt-Anchor" href="#修复依赖冲突如果没有的话可以不执行"></a> 修复依赖冲突（如果没有的话可以不执行）</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm audix</span><br></pre></td></tr></table></figure><p>然后<code>npm i</code>一下就好了</p>]]></content:encoded>
      
      
      <category domain="https://ranmaxli.gitee.io/blog/categories/Hexo/">Hexo</category>
      
      
      <category domain="https://ranmaxli.gitee.io/blog/tags/Hexo/">Hexo</category>
      
      <category domain="https://ranmaxli.gitee.io/blog/tags/%E6%8F%92%E4%BB%B6/">插件</category>
      
      
      <comments>https://ranmaxli.gitee.io/blog/post/%E6%9B%B4%E6%96%B0Hexo%E5%8F%8A%E6%8F%92%E4%BB%B6%E7%89%88%E6%9C%AC/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Butterfly主题添加51la统计和灵雀应用监控</title>
      <link>https://ranmaxli.gitee.io/blog/post/Butterfly%E4%B8%BB%E9%A2%98%E6%B7%BB%E5%8A%A051la%E7%BB%9F%E8%AE%A1%E5%92%8C%E7%81%B5%E9%9B%80%E5%BA%94%E7%94%A8%E7%9B%91%E6%8E%A7/</link>
      <guid>https://ranmaxli.gitee.io/blog/post/Butterfly%E4%B8%BB%E9%A2%98%E6%B7%BB%E5%8A%A051la%E7%BB%9F%E8%AE%A1%E5%92%8C%E7%81%B5%E9%9B%80%E5%BA%94%E7%94%A8%E7%9B%91%E6%8E%A7/</guid>
      <pubDate>Fri, 02 Sep 2022 00:08:07 GMT</pubDate>
      
        
        
          
          
      <description>&lt;h1 id=&quot;前言&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#前言&quot;&gt;&lt;/a&gt; 前言&lt;/h1&gt;
&lt;p&gt;因为最近百度统计时常抽风，所以作者切换到了51la统计&lt;/p&gt;
&lt;h1 id=&quot;51la统计&quot;&gt;&lt;a</description>
          
        
      
      
      
      <content:encoded><![CDATA[<h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1><p>因为最近百度统计时常抽风，所以作者切换到了51la统计</p><h1 id="51la统计"><a class="markdownIt-Anchor" href="#51la统计"></a> 51la统计</h1><h2 id="快速开始"><a class="markdownIt-Anchor" href="#快速开始"></a> 快速开始</h2><p>首先注册<a href="https://invite.51.la/1OtUuw1AA?target=V6">51la统计</a></p><blockquote><p>(这是一个邀请链接，我会获得10元，新用户会获得8元。(不使用邀请链接均无奖励))</p></blockquote><p>并添加网站，获取网站安装代码(开启了Pjax的可以打开单页应用上报功能)</p><p><img src="https://cxl2020mc-1304820025.file.myqcloud.com/file/202209020832226.png" alt="51la统计" /></p><p>会得到如下代码</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> <span class="attr">id</span>=<span class="string">&quot;LA_COLLECT&quot;</span> <span class="attr">src</span>=<span class="string">&quot;//sdk.51.la/js-sdk-pro.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"><span class="variable constant_">LA</span>.<span class="title function_">init</span>(&#123;<span class="attr">id</span>: <span class="string">&quot;xxxx&quot;</span>,<span class="attr">ck</span>: <span class="string">&quot;xxxx&quot;</span>,<span class="attr">hashMode</span>:<span class="literal">true</span>&#125;)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="安装代码"><a class="markdownIt-Anchor" href="#安装代码"></a> 安装代码</h3><div class="tabs" id="test1"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#test1-1">同步安装</button></li><li class="tab active"><button type="button" data-href="#test1-2">异步安装</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="test1-1"><p>加入butterfly主题配置文件</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">inject:</span><br><span class="line">  head:</span><br><span class="line">    ......</span><br><span class="line"><span class="addition">+   - &lt;script charset=&quot;UTF-8&quot; id=&quot;LA_COLLECT&quot; src=&quot;//sdk.51.la/js-sdk-pro.min.js&quot;&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="addition">+   - &lt;script&gt;LA.init(&#123;id: &quot;xxxx&quot;,ck: &quot;xxxx&quot;,hashMode:true&#125;);&lt;/script&gt;</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="test1-2"><p>在博客根目录内的<code>source</code>文件夹内建立<code>js</code>文件夹((其实可以随便放)已经建立的不用重复建立)</p><p>在刚刚建立的<code>js</code>文件夹内新建一个<code>51la.js</code>内部写上</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable constant_">LA</span>.<span class="title function_">init</span>(<span class="string">&quot;这里填上安装代码的配置json&quot;</span>);</span><br></pre></td></tr></table></figure><blockquote><p>配置json指的是刚刚复制的代码内的<code>{id: &quot;xxxx&quot;,ck: &quot;xxxx&quot;,hashMode:true}</code></p></blockquote><p>填好后大概长这个样子</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable constant_">LA</span>.<span class="title function_">init</span>(&#123;<span class="attr">id</span>: <span class="string">&quot;xxxx&quot;</span>,<span class="attr">ck</span>: <span class="string">&quot;xxxx&quot;</span>,<span class="attr">hashMode</span>:<span class="literal">true</span>&#125;);</span><br></pre></td></tr></table></figure><p>然后在主题配置文件内加上</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">inject:</span><br><span class="line">  head:</span><br><span class="line">    ......</span><br><span class="line"><span class="addition">+   - &lt;script defer charset=&quot;UTF-8&quot; id=&quot;LA_COLLECT&quot; src=&quot;//sdk.51.la/js-sdk-pro.min.js&quot;&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="addition">+   - &lt;script defer src=&quot;/js/51la.js&quot;&gt;&lt;/script&gt;</span></span><br></pre></td></tr></table></figure><p>利用defer标签实现按顺序异步加载</p><blockquote><p>不要变动顺序，会导致不生效<br />注意: 等会异步安装灵雀应用监控的时候添加的js脚本一定要放在51la.js前面</p></blockquote><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="灵雀应用监控"><a class="markdownIt-Anchor" href="#灵雀应用监控"></a> 灵雀应用监控</h1><h2 id="快速开始-2"><a class="markdownIt-Anchor" href="#快速开始-2"></a> 快速开始</h2><p>使用刚刚注册的51la账号登录<a href="https://perf.51.la/">灵雀应用监控</a></p><p>并且创建应用，获取安装代码</p><blockquote><p>开启了pjax的可以打开单页应用上报</p></blockquote><p><img src="https://cxl2020mc-1304820025.file.myqcloud.com/file/202209020851621.png" alt="灵雀应用监控" /></p><p>然后会得到以下内容</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://sdk.51.la/perf/js-sdk-perf.min.js&quot;</span> <span class="attr">crossorigin</span>=<span class="string">&quot;anonymous&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">new</span> <span class="title class_">LingQue</span>.<span class="title class_">Monitor</span>().<span class="title function_">init</span>(&#123;<span class="attr">id</span>:<span class="string">&quot;xxxxxx&quot;</span>,<span class="attr">sendSpaPv</span>:<span class="literal">true</span>&#125;);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="安装代码-2"><a class="markdownIt-Anchor" href="#安装代码-2"></a> 安装代码</h3><div class="tabs" id="test1"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#test1-1">同步安装</button></li><li class="tab active"><button type="button" data-href="#test1-2">异步安装</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="test1-1"><p>加入butterfly主题配置文件</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">inject:</span><br><span class="line">  head:</span><br><span class="line">    ......</span><br><span class="line"><span class="addition">+   - &lt;script src=&quot;https://sdk.51.la/perf/js-sdk-perf.min.js&quot; crossorigin=&quot;anonymous&quot;&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="addition">+   - &lt;script&gt;new LingQue.Monitor().init(&#123;id:&quot;xxxxxxxxx&quot;,sendSpaPv:true&#125;);&lt;/script&gt;</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="test1-2"><p>在刚刚为异步51la新建的<code>51la.js</code>内部加上(注意是加上)</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> <span class="title class_">LingQue</span>.<span class="title class_">Monitor</span>().<span class="title function_">init</span>(<span class="string">&quot;这里填上安装代码的配置json&quot;</span>);</span><br></pre></td></tr></table></figure><blockquote><p>配置json指的是刚刚复制的代码内的<code>{id:&quot;xxxxxxxxx&quot;,sendSpaPv:true}</code></p></blockquote><p>填好后大概长这个样子</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> <span class="title class_">LingQue</span>.<span class="title class_">Monitor</span>().<span class="title function_">init</span>(&#123;<span class="attr">id</span>:<span class="string">&quot;xxxxxxxxx&quot;</span>,<span class="attr">sendSpaPv</span>:<span class="literal">true</span>&#125;);</span><br></pre></td></tr></table></figure><p>然后在主题配置文件内加上</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">inject:</span><br><span class="line">  head:</span><br><span class="line">    ......</span><br><span class="line">    - &lt;script defer charset=&quot;UTF-8&quot; id=&quot;LA_COLLECT&quot; src=&quot;//sdk.51.la/js-sdk-pro.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line"><span class="addition">+   - &lt;script defer src=&quot;https://sdk.51.la/perf/js-sdk-perf.min.js&quot; crossorigin=&quot;anonymous&quot;&gt;&lt;/script&gt;</span></span><br><span class="line">    - &lt;script defer src=&quot;/js/51la.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>利用defer标签实现按顺序异步加载</p><blockquote><p>不要变动顺序，会导致不生效</p></blockquote><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><div class="tag link"><a class="link-card" title="51LA" href="https://www.51.la"><div class="left"><img src="/img/link.png"/></div><div class="right"><p class="text">51LA</p><p class="url">https://www.51.la</p></div></a></div>]]></content:encoded>
      
      
      <category domain="https://ranmaxli.gitee.io/blog/categories/Hexo/">Hexo</category>
      
      <category domain="https://ranmaxli.gitee.io/blog/categories/Butterfly/">Butterfly</category>
      
      
      <category domain="https://ranmaxli.gitee.io/blog/tags/Hexo/">Hexo</category>
      
      <category domain="https://ranmaxli.gitee.io/blog/tags/Butterfly/">Butterfly</category>
      
      
      <comments>https://ranmaxli.gitee.io/blog/post/Butterfly%E4%B8%BB%E9%A2%98%E6%B7%BB%E5%8A%A051la%E7%BB%9F%E8%AE%A1%E5%92%8C%E7%81%B5%E9%9B%80%E5%BA%94%E7%94%A8%E7%9B%91%E6%8E%A7/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Hexo Dplayer播放器自定义标签外挂</title>
      <link>https://ranmaxli.gitee.io/blog/post/Hexo-Dplayer%E6%92%AD%E6%94%BE%E5%99%A8%E8%87%AA%E5%AE%9A%E4%B9%89%E6%A0%87%E7%AD%BE%E5%A4%96%E6%8C%82/</link>
      <guid>https://ranmaxli.gitee.io/blog/post/Hexo-Dplayer%E6%92%AD%E6%94%BE%E5%99%A8%E8%87%AA%E5%AE%9A%E4%B9%89%E6%A0%87%E7%AD%BE%E5%A4%96%E6%8C%82/</guid>
      <pubDate>Thu, 01 Sep 2022 06:03:39 GMT</pubDate>
      
        
        
          
          
      <description>&lt;h1 id=&quot;前言&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#前言&quot;&gt;&lt;/a&gt; 前言&lt;/h1&gt;
&lt;p&gt;作者今天看到了糖果屋的一篇文章 &lt;a</description>
          
        
      
      
      
      <content:encoded><![CDATA[<h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1><p>作者今天看到了糖果屋的一篇文章 <a href="https://akilar.top/posts/e2bf861f/">DIY外挂标签的简单写法与应用</a> 就突发奇想的想给Dplayer写个标签外挂(<s>其实是想以后的时候偷懒</s>)</p><h1 id="教程"><a class="markdownIt-Anchor" href="#教程"></a> 教程</h1><p>在博客根目录下新建<code>scripts</code>文件夹(已建立的不用重复建立)</p><p>新建一个随意名称的文件（后缀要是<code>.js</code>）比如<code>diytag.js</code></p><p>填入</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//参数处理函数</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">dplayer</span> (args, content) &#123;</span><br><span class="line">    <span class="comment">// args = args.join(&#x27; &#x27;).split(&#x27;,&#x27;)</span></span><br><span class="line">    <span class="comment">// const div_id = args[0]</span></span><br><span class="line">    <span class="comment">// const div_id = args[1]?args[1]:p0</span></span><br><span class="line">    <span class="keyword">const</span> div_id = args</span><br><span class="line">    html = <span class="string">`&lt;div id=&quot;<span class="subst">$&#123;div_id&#125;</span>&quot;&gt;播放器加载中......&lt;/div&gt;</span></span><br><span class="line"><span class="string">&lt;script&gt;</span></span><br><span class="line"><span class="string">//立即执行函数</span></span><br><span class="line"><span class="string">(</span></span><br><span class="line"><span class="string">    function () &#123;</span></span><br><span class="line"><span class="string">        import(&#x27;https://jsd.cxl2020mc.top/npm/dplayer/+esm&#x27;)</span></span><br><span class="line"><span class="string">            .then((module) =&gt; &#123;</span></span><br><span class="line"><span class="string">                // Do something with the module.</span></span><br><span class="line"><span class="string">                // const <span class="subst">$&#123;div_id&#125;</span> = new DPlayer(&#123;</span></span><br><span class="line"><span class="string">                const Dplayer = module.default</span></span><br><span class="line"><span class="string">                const <span class="subst">$&#123;div_id&#125;</span> = new Dplayer(&#123;</span></span><br><span class="line"><span class="string">                    container: document.getElementById(&#x27;<span class="subst">$&#123;div_id&#125;</span>&#x27;),</span></span><br><span class="line"><span class="string">                    <span class="subst">$&#123;content&#125;</span></span></span><br><span class="line"><span class="string">                &#125;);</span></span><br><span class="line"><span class="string">            &#125;);</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">)();</span></span><br><span class="line"><span class="string">&lt;/script&gt;`</span></span><br><span class="line">    <span class="keyword">return</span> html</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//标签注册函数</span></span><br><span class="line">hexo.<span class="property">extend</span>.<span class="property">tag</span>.<span class="title function_">register</span>(<span class="string">&#x27;dplayer&#x27;</span>, dplayer, &#123; <span class="attr">ends</span>: <span class="literal">true</span> &#125;);</span><br></pre></td></tr></table></figure><p>然后你就可以在文章里用标签外挂的方法使用deplayer了<br />（记得先在head引入Dplayer）</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% dplayer dplayer %&#125;</span><br><span class="line">video: &#123;</span><br><span class="line"><span class="code">    url: &#x27;https://file.cxl2020mc.top/api/raw/?path=/mc1.mp4&#x27;,</span></span><br><span class="line"><span class="code">&#125;</span></span><br><span class="line"><span class="code">&#123;% enddplayer %&#125;</span></span><br></pre></td></tr></table></figure><h1 id="参数"><a class="markdownIt-Anchor" href="#参数"></a> 参数</h1><p>参数<code>dp</code>表示播放器对象名称<br />参数<code>dplayer</code>表示播放器的容器id<br />所有参数在一个文章中不能出现2个相同的</p><h1 id="演示"><a class="markdownIt-Anchor" href="#演示"></a> 演示</h1><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% dplayer dplayer %&#125;</span><br><span class="line">video: &#123;</span><br><span class="line"><span class="code">    url: &#x27;https://lc-gluttony.s3.amazonaws.com/eABALL5rKFsL/n66RHPuNklJeNRlEgYOPdkCoO2MEJ7HR/fd431739ff26ceeb3010ac561d68446b_345688670889091949.mp4&#x27;,</span></span><br><span class="line"><span class="code">&#125;</span></span><br><span class="line"><span class="code">&#123;% enddplayer %&#125;</span></span><br></pre></td></tr></table></figure><div id="dplayer">播放器加载中......</div><script>//立即执行函数(    function () {        import('https://jsd.cxl2020mc.top/npm/dplayer/+esm')            .then((module) => {                // Do something with the module.                // const dplayer = new DPlayer({                const Dplayer = module.default                const dplayer = new Dplayer({                    container: document.getElementById('dplayer'),                    video: {    url: 'https://lc-gluttony.s3.amazonaws.com/eABALL5rKFsL/n66RHPuNklJeNRlEgYOPdkCoO2MEJ7HR/fd431739ff26ceeb3010ac561d68446b_345688670889091949.mp4',}                });            });    })();</script><h1 id="高级演示"><a class="markdownIt-Anchor" href="#高级演示"></a> 高级演示</h1><blockquote><p>支持切换清晰度（不过给我用成切换视频节点了），默认第1个</p></blockquote><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&#123;% dplayer dplayer2 %&#125;</span><br><span class="line">video: &#123;</span><br><span class="line"><span class="code">    quality: [</span></span><br><span class="line"><span class="code">        &#123;</span></span><br><span class="line"><span class="code">            name: &#x27;od&#x27;,</span></span><br><span class="line"><span class="code">            url: &#x27;https://file.cxl2020mc.top/api/raw/?path=/video/%E5%8E%9F%E7%A5%9E%E5%AE%98%E6%96%B9%E5%AE%A3%E4%BC%A0%E7%89%87.mp4&#x27;,</span></span><br><span class="line"><span class="code">        &#125;,</span></span><br><span class="line"><span class="code">        &#123;</span></span><br><span class="line"><span class="code">            name: &#x27;s3&#x27;,</span></span><br><span class="line"><span class="code">            url: &#x27;https://lc-gluttony.s3.amazonaws.com/eABALL5rKFsL/n66RHPuNklJeNRlEgYOPdkCoO2MEJ7HR/fd431739ff26ceeb3010ac561d68446b_345688670889091949.mp4&#x27;,</span></span><br><span class="line"><span class="code">        &#125;,</span></span><br><span class="line"><span class="code">    ],</span></span><br><span class="line"><span class="code">    defaultQuality: 0,</span></span><br><span class="line"><span class="code">&#125;</span></span><br><span class="line"><span class="code">&#123;% enddplayer %&#125;</span></span><br></pre></td></tr></table></figure><div id="dplayer2">播放器加载中......</div><script>//立即执行函数(    function () {        import('https://jsd.cxl2020mc.top/npm/dplayer/+esm')            .then((module) => {                // Do something with the module.                // const dplayer2 = new DPlayer({                const Dplayer = module.default                const dplayer2 = new Dplayer({                    container: document.getElementById('dplayer2'),                    video: {    quality: [        {            name: 'od',            url: 'https://file.cxl2020mc.top/api/raw/?path=/video/%E5%8E%9F%E7%A5%9E%E5%AE%98%E6%96%B9%E5%AE%A3%E4%BC%A0%E7%89%87.mp4',        },        {            name: 's3',            url: 'https://lc-gluttony.s3.amazonaws.com/eABALL5rKFsL/n66RHPuNklJeNRlEgYOPdkCoO2MEJ7HR/fd431739ff26ceeb3010ac561d68446b_345688670889091949.mp4',        },    ],    defaultQuality: 0,}                });            });    })();</script>]]></content:encoded>
      
      
      <category domain="https://ranmaxli.gitee.io/blog/categories/Hexo/">Hexo</category>
      
      <category domain="https://ranmaxli.gitee.io/blog/categories/Butterfly/">Butterfly</category>
      
      
      <category domain="https://ranmaxli.gitee.io/blog/tags/Hexo/">Hexo</category>
      
      <category domain="https://ranmaxli.gitee.io/blog/tags/Butterfly/">Butterfly</category>
      
      <category domain="https://ranmaxli.gitee.io/blog/tags/%E6%8F%92%E4%BB%B6/">插件</category>
      
      
      <comments>https://ranmaxli.gitee.io/blog/post/Hexo-Dplayer%E6%92%AD%E6%94%BE%E5%99%A8%E8%87%AA%E5%AE%9A%E4%B9%89%E6%A0%87%E7%AD%BE%E5%A4%96%E6%8C%82/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>talktalk api文档</title>
      <link>https://ranmaxli.gitee.io/blog/post/talktalk-api%E6%96%87%E6%A1%A3/</link>
      <guid>https://ranmaxli.gitee.io/blog/post/talktalk-api%E6%96%87%E6%A1%A3/</guid>
      <pubDate>Sat, 20 Aug 2022 11:47:49 GMT</pubDate>
      
        
        
          
          
      <description>&lt;blockquote&gt;
&lt;p&gt;随便的简介&lt;br /&gt;
talktalk是博主自己开发的一个说说系统&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;api文档&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#api文档&quot;&gt;&lt;/a&gt;</description>
          
        
      
      
      
      <content:encoded><![CDATA[<blockquote><p>随便的简介<br />talktalk是博主自己开发的一个说说系统</p></blockquote><h1 id="api文档"><a class="markdownIt-Anchor" href="#api文档"></a> api文档</h1><blockquote><p>所有api需要<code>POST</code>请求到<code>/api/v1/talktalk</code><br />并传递<code>json</code>数据:<code>&#123;&quot;type&quot;: &quot;选择的api&quot;&#125;</code><br />测试api地址<code>https://talktalk-six.vercel.app</code></p></blockquote><table><thead><tr><th style="text-align:center">参数名</th><th style="text-align:center">数据类型</th><th style="text-align:center">默认值</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center"><code>type</code></td><td style="text-align:center"><code>str</code></td><td style="text-align:center">无</td><td>选择的api</td></tr></tbody></table><h2 id="获取说说"><a class="markdownIt-Anchor" href="#获取说说"></a> 获取说说</h2><table><thead><tr><th style="text-align:center">参数名</th><th style="text-align:center">数据类型</th><th style="text-align:center">默认值</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center"><code>type</code></td><td style="text-align:center"><code>str</code></td><td style="text-align:center">无</td><td>选择的api，这个是<code>load</code></td></tr><tr><td style="text-align:center"><code>num</code></td><td style="text-align:center"><code>int</code></td><td style="text-align:center"><code>15</code></td><td>指定单次查询数量</td></tr><tr><td style="text-align:center"><code>skip</code></td><td style="text-align:center"><code>int</code></td><td style="text-align:center"><code>0</code></td><td>指定单次跳过数量</td></tr></tbody></table><h3 id="列子"><a class="markdownIt-Anchor" href="#列子"></a> 列子</h3><p><code>&#123;&quot;type&quot;: &quot;load&quot;&#125;</code></p><h2 id="点赞说说"><a class="markdownIt-Anchor" href="#点赞说说"></a> 点赞说说</h2><table><thead><tr><th style="text-align:center">参数名</th><th style="text-align:center">数据类型</th><th style="text-align:center">默认值</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center"><code>type</code></td><td style="text-align:center"><code>str</code></td><td style="text-align:center">无</td><td>选择的api，这个是<code>good</code></td></tr><tr><td style="text-align:center"><code>id</code></td><td style="text-align:center"><code>str</code></td><td style="text-align:center">无</td><td>说说id(读取说说的返回数据里有)</td></tr></tbody></table><h3 id="列子-2"><a class="markdownIt-Anchor" href="#列子-2"></a> 列子</h3><p><code>&#123;&quot;type&quot;: &quot;good&quot;, &quot;id&quot;: &quot;ewfgyegfyegfreferfuergfygevf&quot;&#125;</code></p><h2 id="登录api"><a class="markdownIt-Anchor" href="#登录api"></a> 登录api</h2><blockquote><p>以下api需要登录</p><p>登录传入json数据<code>&#123;&quot;type&quot;: &quot;login&quot;, &quot;pwd&quot;: &quot;你的密码&quot;&#125;</code></p><p>返回会话(<code>session</code>)数据</p><p>请求下面的api需要携带<code>session</code>数据</p></blockquote><h3 id="发送说说"><a class="markdownIt-Anchor" href="#发送说说"></a> 发送说说</h3><table><thead><tr><th style="text-align:center">参数名</th><th style="text-align:center">数据类型</th><th style="text-align:center">默认值</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center"><code>type</code></td><td style="text-align:center"><code>str</code></td><td style="text-align:center">无</td><td>选择的api，这个是<code>send</code></td></tr><tr><td style="text-align:center"><code>data.text</code></td><td style="text-align:center"><code>str</code></td><td style="text-align:center">无</td><td>说说的内容</td></tr><tr><td style="text-align:center"><code>data.device</code></td><td style="text-align:center"><code>str</code></td><td style="text-align:center">无</td><td>发送说说的设备</td></tr></tbody></table><h3 id="编辑说说"><a class="markdownIt-Anchor" href="#编辑说说"></a> 编辑说说</h3><table><thead><tr><th style="text-align:center">参数名</th><th style="text-align:center">数据类型</th><th style="text-align:center">默认值</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center"><code>type</code></td><td style="text-align:center"><code>str</code></td><td style="text-align:center">无</td><td>选择的api，这个是<code>edit</code></td></tr><tr><td style="text-align:center"><code>id</code></td><td style="text-align:center"><code>str</code></td><td style="text-align:center">无</td><td>说说id，加载说说返回数据里有</td></tr><tr><td style="text-align:center"><code>data</code></td><td style="text-align:center"><code>json</code></td><td style="text-align:center">无</td><td>要修改的内容如<code>&#123;&quot;text&quot;: &quot;测试测试&quot;&#125;</code></td></tr></tbody></table><h3 id="删除说说"><a class="markdownIt-Anchor" href="#删除说说"></a> 删除说说</h3><table><thead><tr><th style="text-align:center">参数名</th><th style="text-align:center">数据类型</th><th style="text-align:center">默认值</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center"><code>type</code></td><td style="text-align:center"><code>str</code></td><td style="text-align:center">无</td><td>选择的api，这个是<code>good</code></td></tr><tr><td style="text-align:center"><code>id</code></td><td style="text-align:center"><code>str</code></td><td style="text-align:center">无</td><td>说说id，加载说说返回数据里有</td></tr></tbody></table><h3 id="点赞说说-2"><a class="markdownIt-Anchor" href="#点赞说说-2"></a> 点赞说说</h3><blockquote><p>文档施工中（懒…）</p></blockquote>]]></content:encoded>
      
      
      
      
      <comments>https://ranmaxli.gitee.io/blog/post/talktalk-api%E6%96%87%E6%A1%A3/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>twikoo-vercel评论数据导出工具</title>
      <link>https://ranmaxli.gitee.io/blog/post/twikoo-vercel%E8%AF%84%E8%AE%BA%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%87%BA%E5%B7%A5%E5%85%B7/</link>
      <guid>https://ranmaxli.gitee.io/blog/post/twikoo-vercel%E8%AF%84%E8%AE%BA%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%87%BA%E5%B7%A5%E5%85%B7/</guid>
      <pubDate>Wed, 10 Aug 2022 12:22:26 GMT</pubDate>
      
        
        
          
          
      <description>&lt;h1 id=&quot;前言&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#前言&quot;&gt;&lt;/a&gt; 前言&lt;/h1&gt;
&lt;p&gt;twikoo-vercel版评论导出较为复杂，然后作者(博主)写了个脚本，可以一键导出评论数据&lt;/p&gt;
&lt;h1 id=&quot;快速开始&quot;&gt;&lt;a</description>
          
        
      
      
      
      <content:encoded><![CDATA[<h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1><p>twikoo-vercel版评论导出较为复杂，然后作者(博主)写了个脚本，可以一键导出评论数据</p><h1 id="快速开始"><a class="markdownIt-Anchor" href="#快速开始"></a> 快速开始</h1><blockquote><p>打包的文件只支持windows运行，其他系统请使用源码并安装自行安装依赖（建议py大佬尝试）</p></blockquote><p><a href="https://file.cxl2020mc.top/api/raw/?path=/app/twikoo-vercel%E8%AF%84%E8%AE%BA%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%87%BA%E5%B7%A5%E5%85%B7.zip">wimdows版下载</a></p><p>下载完成后解压</p><h1 id="使用方法"><a class="markdownIt-Anchor" href="#使用方法"></a> 使用方法</h1><p>打开twikoo的vercel项目<br />点击<code>Settings</code> - <code>Environment Variables</code></p><p>下滑到页面最下面点击<code>MONGODB_URI</code>环境变量边上的小眼睛，复制出现的内容。</p><p>启动刚刚下载的工具里面的<code>.exe</code>文件<br />并且按照提示操作(tips: CMD的复制是右键，不是Ctrl+V)</p><p>运行完成后当前目录会出现<code>data.json</code>文件<br />这就是导出的数据</p>]]></content:encoded>
      
      
      
      <category domain="https://ranmaxli.gitee.io/blog/tags/Twikoo/">Twikoo</category>
      
      
      <comments>https://ranmaxli.gitee.io/blog/post/twikoo-vercel%E8%AF%84%E8%AE%BA%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%87%BA%E5%B7%A5%E5%85%B7/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>用cw(ClientWorker)给你的Hexo网站提速</title>
      <link>https://ranmaxli.gitee.io/blog/post/%E7%94%A8cw%E7%BB%99%E4%BD%A0%E7%9A%84%E7%BD%91%E7%AB%99%E6%8F%90%E9%80%9F/</link>
      <guid>https://ranmaxli.gitee.io/blog/post/%E7%94%A8cw%E7%BB%99%E4%BD%A0%E7%9A%84%E7%BD%91%E7%AB%99%E6%8F%90%E9%80%9F/</guid>
      <pubDate>Tue, 02 Aug 2022 13:27:41 GMT</pubDate>
      
        
        
          
          
      <description>&lt;h1 id=&quot;前言&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#前言&quot;&gt;&lt;/a&gt; 前言&lt;/h1&gt;
&lt;p&gt;&lt;img</description>
          
        
      
      
      
      <content:encoded><![CDATA[<h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1><p><img src="https://cxl2020mc-1304820025.file.myqcloud.com/file/202208072111228.png" alt="cw官网" /></p><p>ClientWorker简称cw</p><p>cw是cyf大佬开发的一个简单且配置方便的一个sw</p><p>官方是这么介绍的:</p><blockquote><p>ClientWorker<br />一个基于规则驱动的前端路由拦截器<br />用规则定义黑科技</p></blockquote><p><img src="https://cxl2020mc-1304820025.file.myqcloud.com/file/202208072113936.png" alt="cw官网快速开始" /></p><!-- [官方文档](https://clientworker.js.org/) --><div class="tag link"><a class="link-card" title="clientworker官方文档" href="https://clientworker.js.org"><div class="left"><img src="/img/link.png"/></div><div class="right"><p class="text">clientworker官方文档</p><p class="url">https://clientworker.js.org</p></div></a></div><h1 id="快速开始"><a class="markdownIt-Anchor" href="#快速开始"></a> 快速开始</h1><blockquote><p><sub>墙裂</sub>建议参考<a href="https://clientworker.js.org/start.html#%E5%BF%AB%E9%80%9F%E5%BC%80%E5%A7%8B">官方文档 - 快速开始</a><br />这里只写 Hexo Butterfly 主题的方法</p></blockquote><h2 id="cdn接入"><a class="markdownIt-Anchor" href="#cdn接入"></a> CDN接入</h2><blockquote><p>官方<sub>墙裂</sub>建议用此方式安装。</p></blockquote><p>在你的网站**根目录(就是博客根目录\scores)**下新建一个名为 <code>cw.js</code>的文件，里面写上：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">importScripts(<span class="string">&#x27;https://lib.baomitu.com/clientworker/latest/dist/cw.js&#x27;</span>)</span><br></pre></td></tr></table></figure><p>你也可以采用jsdelivr镜像进行接入</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">importScripts(<span class="string">&#x27;https://cdn.jsdelivr.net/npm/clientworker@latest&#x27;</span>) <span class="comment">//最好指定版本</span></span><br></pre></td></tr></table></figure><p>官方文档拥有更多引入镜像</p><blockquote><p>官方非常强烈建议在引入脚本时要指定clientworker的版本(而不是默认latest(最新版本))，最新版本可以到<a href="https://github.com/ChenYFan/ClientWorker/releases">官方GitHub Release</a>查看。</p></blockquote><h2 id="写入配置"><a class="markdownIt-Anchor" href="#写入配置"></a> 写入配置</h2><blockquote><p>这个也是cw最容易出问题的点(最简单也是最难的一步)</p></blockquote><p>在<strong>根目录</strong>(hexo 请放在 <code>博客根目录\scores</code>)下新建一个 <code>config.yaml</code>，填入配置。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">ClientWorker</span> </span><br><span class="line"><span class="attr">catch_rules:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">rule:</span> <span class="string">_</span></span><br><span class="line">    <span class="attr">transform_rules:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">search:</span> <span class="string">\#.+</span></span><br><span class="line">        <span class="attr">searchin:</span> <span class="string">url</span></span><br><span class="line">        <span class="attr">replace:</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">search:</span> <span class="string">_</span> </span><br><span class="line">        <span class="attr">action:</span> <span class="string">fetch</span></span><br><span class="line">        <span class="attr">fetch:</span></span><br><span class="line">          <span class="attr">engine:</span> <span class="string">fetch</span> </span><br><span class="line">      <span class="bullet">-</span> <span class="attr">search:</span> <span class="string">(^4|^5)</span> </span><br><span class="line">        <span class="attr">searchin:</span> <span class="string">status</span> </span><br><span class="line">        <span class="attr">action:</span> <span class="string">return</span></span><br><span class="line">        <span class="attr">return:</span></span><br><span class="line">          <span class="attr">body:</span> <span class="string">The</span> <span class="string">GateWay</span> <span class="string">is</span> <span class="string">down!This</span> <span class="string">Page</span> <span class="string">is</span> <span class="string">provided</span> <span class="string">by</span> <span class="string">ClientWorker!</span></span><br><span class="line">          <span class="attr">status:</span> <span class="number">503</span></span><br></pre></td></tr></table></figure><p>也可以填入我这个什么用也没有的配置</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">ClientWorker</span></span><br><span class="line"><span class="attr">catch_rules:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">rule:</span> <span class="string">_</span></span><br><span class="line">    <span class="attr">transform_rules:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">search:</span> <span class="string">_</span></span><br><span class="line">        <span class="attr">action:</span> <span class="string">skip</span></span><br></pre></td></tr></table></figure><h2 id="step-3-配置安装代码"><a class="markdownIt-Anchor" href="#step-3-配置安装代码"></a> Step 3 配置安装代码</h2><p>官方有三种方式接入： <code>三文件全域安装</code> 、 <code>自定义无刷新安装</code> 、 <code>自定义刷新安装</code></p><p>但我这只讲：<code>自定义无刷新安装</code>、<code>自定义刷新安装</code></p><blockquote><p>其中，<code>全域安装</code>最简单，对SEO支持也最恶劣（Google会提示额外的计算开销，而百度完全没办法爬取）。比较适用于自用的、只追求速度的。<code>自定义无刷新安装</code>则对你的HTML和JS水平有所要求，对于部分不遵守标准的浏览器兼容性较差，但是这种方法对SEO没有影响，比较适合于对seo注重的网站。<code>自定义刷新安装</code>对seo略有影响，会在载入后阻断未经CW的请求并刷新一次，以便于CW及时托管，比较适合于网站提速</p></blockquote><p>通用步骤：<br />在<code>博客根目录\scores</code>新建一个js(放在scores文件夹里就行),名称随意比如<code>cw_install.js</code></p><blockquote><p>本文以<code>source/js/cw_install.js</code>为列子<br />下面有2种方法，可以通过点击tab切换</p></blockquote><div class="tabs" id="test1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test1-1">自定义无刷新安装</button></li><li class="tab"><button type="button" data-href="#test1-2">自定义刷新安装</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><p>在刚刚新建的js文件里写上下面这些内容</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (!!navigator.<span class="property">serviceWorker</span>) &#123;</span><br><span class="line">    navigator.<span class="property">serviceWorker</span>.<span class="title function_">register</span>(<span class="string">&#x27;/cw.js?t=&#x27;</span> + <span class="keyword">new</span> <span class="title class_">Date</span>().<span class="title function_">getTime</span>()).<span class="title function_">then</span>(<span class="keyword">async</span> (registration) =&gt; &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&#x27;cw_installed&#x27;</span>) !== <span class="string">&#x27;true&#x27;</span>) &#123;</span><br><span class="line">            <span class="keyword">const</span> <span class="title function_">conf</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;[CW] Installing Success,Configuring...&#x27;</span>);</span><br><span class="line">                <span class="title function_">fetch</span>(<span class="string">&#x27;/cw-cgi/api?type=config&#x27;</span>)</span><br><span class="line">                    .<span class="title function_">then</span>(<span class="function"><span class="params">res</span> =&gt;</span> res.<span class="title function_">text</span>())</span><br><span class="line">                    .<span class="title function_">then</span>(<span class="function"><span class="params">text</span> =&gt;</span> &#123;</span><br><span class="line">                        <span class="keyword">if</span> (text === <span class="string">&#x27;ok&#x27;</span>) &#123;</span><br><span class="line">                            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;[CW] Installing Success,Configuring Success,Starting...&#x27;</span>);</span><br><span class="line">                            <span class="variable language_">localStorage</span>.<span class="title function_">setItem</span>(<span class="string">&#x27;cw_installed&#x27;</span>, <span class="string">&#x27;true&#x27;</span>);</span><br><span class="line">                            <span class="comment">//如果你不希望重载页面，请移除下面七行</span></span><br><span class="line">                            <span class="comment">//重载标识 - 开始</span></span><br><span class="line">                            <span class="title function_">fetch</span>(<span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">href</span>).<span class="title function_">then</span>(<span class="function"><span class="params">res</span> =&gt;</span> res.<span class="title function_">text</span>()).<span class="title function_">then</span>(<span class="function"><span class="params">text</span> =&gt;</span> &#123;</span><br><span class="line">                                <span class="variable language_">document</span>.<span class="title function_">open</span>()</span><br><span class="line">                                <span class="variable language_">document</span>.<span class="title function_">write</span>(text);</span><br><span class="line">                                <span class="variable language_">document</span>.<span class="title function_">close</span>();</span><br><span class="line">                            &#125;);</span><br><span class="line">                            <span class="comment">//重载标识 - 结束</span></span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            <span class="variable language_">console</span>.<span class="title function_">warn</span>(<span class="string">&#x27;[CW] Installing Success,Configuring Failed,Sleeping 200ms...&#x27;</span>);</span><br><span class="line">                            <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">                                <span class="title function_">conf</span>()</span><br><span class="line">                            &#125;, <span class="number">200</span>);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;).<span class="title function_">catch</span>(<span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line">                        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;[CW] Installing Success,Configuring Error,Exiting...&#x27;</span>);</span><br><span class="line">                    &#125;);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">                <span class="title function_">conf</span>()</span><br><span class="line">            &#125;, <span class="number">50</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;).<span class="title function_">catch</span>(<span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;[CW] Installing Failed,Error: &#x27;</span> + err.<span class="property">message</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123; <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;[CW] Installing Failed,Error: Browser not support service worker&#x27;</span>); &#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-2"><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (!!navigator.<span class="property">serviceWorker</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&#x27;cw_installed&#x27;</span>) !== <span class="string">&#x27;true&#x27;</span>) &#123;<span class="variable language_">window</span>.<span class="title function_">stop</span>();&#125;</span><br><span class="line">    navigator.<span class="property">serviceWorker</span>.<span class="title function_">register</span>(<span class="string">&#x27;/cw.js?t=&#x27;</span> + <span class="keyword">new</span> <span class="title class_">Date</span>().<span class="title function_">getTime</span>()).<span class="title function_">then</span>(<span class="keyword">async</span> (registration) =&gt; &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&#x27;cw_installed&#x27;</span>) !== <span class="string">&#x27;true&#x27;</span>) &#123;</span><br><span class="line">                <span class="built_in">setInterval</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">                    <span class="title function_">fetch</span>(<span class="string">&#x27;/cw-cgi/api?type=config&#x27;</span>).<span class="title function_">then</span>(<span class="function"><span class="params">res</span> =&gt;</span> res.<span class="title function_">text</span>()).<span class="title function_">then</span>(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">                        <span class="keyword">if</span>(res === <span class="string">&#x27;ok&#x27;</span>) &#123;</span><br><span class="line">                            <span class="variable language_">localStorage</span>.<span class="title function_">setItem</span>(<span class="string">&#x27;cw_installed&#x27;</span>, <span class="string">&#x27;true&#x27;</span>);</span><br><span class="line">                            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;[CW] Installation is completed.Reloading...&#x27;</span>);</span><br><span class="line">                            location.<span class="title function_">reload</span>()</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;).<span class="title function_">catch</span>(<span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line">                        <span class="variable language_">console</span>.<span class="title function_">warn</span>(<span class="string">&#x27;[CW] Installation may not be complete, try again later.&#x27;</span>)</span><br><span class="line">                    &#125;)</span><br><span class="line">                &#125;, <span class="number">100</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;).<span class="title function_">catch</span>(<span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;[CW] Installing Failed,Error: &#x27;</span> + err.<span class="property">message</span>);</span><br><span class="line">    &#125;)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123; <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;[CW] Installing Failed,Error: Browser not support service worker&#x27;</span>); &#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="将cw配置文件跳过渲染并加入头部"><a class="markdownIt-Anchor" href="#将cw配置文件跳过渲染并加入头部"></a> 将cw配置文件跳过渲染，并加入头部</h2><ol><li>打开根目录的hexo配置文件<code>_config.yml</code></li></ol><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">skip_render: </span><br><span class="line"><span class="addition">+      - config.yaml</span></span><br></pre></td></tr></table></figure><ol start="2"><li>打开主题配置文件</li></ol><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">inject:</span> </span><br><span class="line">   <span class="attr">head:</span></span><br><span class="line"><span class="string">+</span>       <span class="string">-&lt;scriptsrc=&quot;/js/cw_install2.js&quot;&gt;&lt;/script&gt;</span></span><br><span class="line">       <span class="string">......</span></span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      
      
      <comments>https://ranmaxli.gitee.io/blog/post/%E7%94%A8cw%E7%BB%99%E4%BD%A0%E7%9A%84%E7%BD%91%E7%AB%99%E6%8F%90%E9%80%9F/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>自己写的一个图片api</title>
      <link>https://ranmaxli.gitee.io/blog/post/%E5%9B%BE%E7%89%87api/</link>
      <guid>https://ranmaxli.gitee.io/blog/post/%E5%9B%BE%E7%89%87api/</guid>
      <pubDate>Wed, 27 Jul 2022 07:03:40 GMT</pubDate>
      
        
        
          
          
      <description>&lt;blockquote&gt;
&lt;p&gt;公共api极易挂，建议使用vercel部署私人api(建议Fork，方便更新)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a</description>
          
        
      
      
      
      <content:encoded><![CDATA[<blockquote><p>公共api极易挂，建议使用vercel部署私人api(建议Fork，方便更新)</p></blockquote><p><a href="https://github.com/cxl2020MC/bing-imgapi">GitHub</a></p><p>公共api地址:<a href="https://api.cxl2020mc.top">https://api.cxl2020mc.top</a></p><blockquote><p>注：仅支持get请求</p></blockquote><p>后加<code>?api=[请求的api]</code>表示请求的api</p><h1 id="api"><a class="markdownIt-Anchor" href="#api"></a> api</h1><h2 id="bing"><a class="markdownIt-Anchor" href="#bing"></a> bing</h2><p>获取bing壁纸</p><p>url:<code>/?api=bing</code></p><table><thead><tr><th>参数</th><th>描述</th><th>值</th></tr></thead><tbody><tr><td>idx</td><td>获取历史图片(仅支持过去7天)</td><td><code>(1/2/3/4/5/6/7)</code>任意选一</td></tr><tr><td>uhd</td><td>获取原图(大部分都为4k)</td><td>任意值</td></tr></tbody></table><h3 id="列子"><a class="markdownIt-Anchor" href="#列子"></a> 列子</h3><h4 id="获取今天的bing壁纸"><a class="markdownIt-Anchor" href="#获取今天的bing壁纸"></a> 获取今天的bing壁纸</h4><p>请求url:<code>https://api.cxl2020mc.top?api=bing</code><br /><img src="https://api.cxl2020mc.top?api=bing" alt="" /></p><h4 id="获取今天的原图bing壁纸"><a class="markdownIt-Anchor" href="#获取今天的原图bing壁纸"></a> 获取今天的原图bing壁纸</h4><p>请求url:<code>https://api.cxl2020mc.top?api=bing&amp;uhd=blblblblbl</code><br /><img src="https://api.cxl2020mc.top?api=bing&amp;uhd=0" alt="" /></p><h4 id="获取昨天的bing壁纸"><a class="markdownIt-Anchor" href="#获取昨天的bing壁纸"></a> 获取昨天的bing壁纸</h4><p>请求url:<code>https://api.cxl2020mc.top?api=bing&amp;idx=1</code><br /><img src="https://api.cxl2020mc.top?api=bing&amp;idx=1" alt="" /></p><h4 id="获取昨天的原图bing壁纸"><a class="markdownIt-Anchor" href="#获取昨天的原图bing壁纸"></a> 获取昨天的原图bing壁纸</h4><p>请求url:<code>https://api.cxl2020mc.top?api=bing&amp;idx=1&amp;uhd=blblbl</code><br /><img src="https://api.cxl2020mc.top?api=bing&amp;idx=1&amp;uhd=blblbl" alt="" /></p><h2 id="info"><a class="markdownIt-Anchor" href="#info"></a> info</h2><p>获取api和bing api 的连接信息</p><p>url:<code>/?api=bing</code></p>]]></content:encoded>
      
      
      <category domain="https://ranmaxli.gitee.io/blog/categories/api/">api</category>
      
      
      <category domain="https://ranmaxli.gitee.io/blog/tags/python/">python</category>
      
      <category domain="https://ranmaxli.gitee.io/blog/tags/api/">api</category>
      
      
      <comments>https://ranmaxli.gitee.io/blog/post/%E5%9B%BE%E7%89%87api/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>全能下载器motrix</title>
      <link>https://ranmaxli.gitee.io/blog/post/%E5%85%A8%E8%83%BD%E4%B8%8B%E8%BD%BD%E5%99%A8motrix/</link>
      <guid>https://ranmaxli.gitee.io/blog/post/%E5%85%A8%E8%83%BD%E4%B8%8B%E8%BD%BD%E5%99%A8motrix/</guid>
      <pubDate>Wed, 27 Jul 2022 06:25:10 GMT</pubDate>
      
        
        
          
          
      <description>&lt;p&gt;&lt;img src=&quot;https://cxl2020mc-1304820025.file.myqcloud.com/file/20210522165435.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img</description>
          
        
      
      
      
      <content:encoded><![CDATA[<p><img src="https://cxl2020mc-1304820025.file.myqcloud.com/file/20210522165435.png" alt="" /></p><p><img src="https://cxl2020mc-1304820025.file.myqcloud.com/file/20210504200903.png" alt="" /></p><p>motrix支持下载 HTTP、FTP、BT、磁力链等资源</p><p>支持Windows、Linux、MacOS系统。</p><p>单任务最高支持 64 线程下载（超快）。</p><p>一般浏览器下不动的东西他都能下。</p><p>官网地址：<a href="https://motrix.app/zh-CN">https://motrix.app/zh-CN</a></p><p>由于官网下载过慢，所以可以使用云盘的离线下载功能加速下载。</p>]]></content:encoded>
      
      
      <category domain="https://ranmaxli.gitee.io/blog/categories/%E8%BD%AF%E4%BB%B6/">软件</category>
      
      
      <category domain="https://ranmaxli.gitee.io/blog/tags/%E8%BD%AF%E4%BB%B6/">软件</category>
      
      
      <comments>https://ranmaxli.gitee.io/blog/post/%E5%85%A8%E8%83%BD%E4%B8%8B%E8%BD%BD%E5%99%A8motrix/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>每日壁纸</title>
      <link>https://ranmaxli.gitee.io/blog/post/%E6%AF%8F%E6%97%A5%E5%A3%81%E7%BA%B8/</link>
      <guid>https://ranmaxli.gitee.io/blog/post/%E6%AF%8F%E6%97%A5%E5%A3%81%E7%BA%B8/</guid>
      <pubDate>Thu, 30 Jun 2022 13:50:20 GMT</pubDate>
      
        
        
          
          
      <description>&lt;h1 id=&quot;必应壁纸&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#必应壁纸&quot;&gt;&lt;/a&gt; 必应壁纸&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;作者自己写的api&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&quot;tabs&quot;</description>
          
        
      
      
      
      <content:encoded><![CDATA[<h1 id="必应壁纸"><a class="markdownIt-Anchor" href="#必应壁纸"></a> 必应壁纸</h1><blockquote><p>作者自己写的api</p></blockquote><div class="tabs" id="img"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#img-1">1080P</button></li><li class="tab"><button type="button" data-href="#img-2">原图</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="img-1"><p><img src="https://api.cxl2020mc.top?api=bing" alt="" /></p><p><img src="https://api.cxl2020mc.top?api=bing&amp;idx=1" alt="" /></p><p><img src="https://api.cxl2020mc.top?api=bing&amp;idx=2" alt="" /></p><p><img src="https://api.cxl2020mc.top?api=bing&amp;idx=3" alt="" /></p><p><img src="https://api.cxl2020mc.top?api=bing&amp;idx=4" alt="" /></p><p><img src="https://api.cxl2020mc.top?api=bing&amp;idx=5" alt="" /></p><p><img src="https://api.cxl2020mc.top?api=bing&amp;idx=6" alt="" /></p><p><img src="https://api.cxl2020mc.top?api=bing&amp;idx=7" alt="" /></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="img-2"><p>原图可能较慢（一张要30秒）bing自己慢<br /><img src="https://api.cxl2020mc.top?api=bing&amp;uhd=1" alt="" /></p><p><img src="https://api.cxl2020mc.top?api=bing&amp;idx=1&amp;uhd=1" alt="" /></p><p><img src="https://api.cxl2020mc.top?api=bing&amp;idx=2&amp;uhd=1" alt="" /></p><p><img src="https://api.cxl2020mc.top?api=bing&amp;idx=3&amp;uhd=1" alt="" /></p><p><img src="https://api.cxl2020mc.top?api=bing&amp;idx=4&amp;uhd=1" alt="" /></p><p><img src="https://api.cxl2020mc.top?api=bing&amp;idx=5&amp;uhd=1" alt="" /></p><p><img src="https://api.cxl2020mc.top?api=bing&amp;idx=6&amp;uhd=1" alt="" /></p><p><img src="https://api.cxl2020mc.top?api=bing&amp;idx=7&amp;uhd=1" alt="" /></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>]]></content:encoded>
      
      
      
      
      <comments>https://ranmaxli.gitee.io/blog/post/%E6%AF%8F%E6%97%A5%E5%A3%81%E7%BA%B8/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>加密文章测试</title>
      <link>https://ranmaxli.gitee.io/blog/post/%E5%8A%A0%E5%AF%86%E6%96%87%E7%AB%A0%E6%B5%8B%E8%AF%95/</link>
      <guid>https://ranmaxli.gitee.io/blog/post/%E5%8A%A0%E5%AF%86%E6%96%87%E7%AB%A0%E6%B5%8B%E8%AF%95/</guid>
      <pubDate>Sun, 26 Jun 2022 12:17:57 GMT</pubDate>
      
      <description>有东西被加密了, 请输入密码查看.</description>
      
      
      
      <content:encoded><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="1db723b5c5fc38c9527b2110d0fd6cb0485f17d557214c6d0b9ddd3db6cf2f9e">4630436162ade97ba2718b7d0c4b3b6327e2784362bb9b52d3b04b4979a8802969b9012f9481cf1b290377fe10b3e0c076fd28eb13df9a4d837c959cf4c69d0e</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">密码是123456</span>      </label>    </div>  </div></div><script data-pjax src="/blog/lib/hbe.js"></script><link href="/blog/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content:encoded>
      
      
      
      
      <comments>https://ranmaxli.gitee.io/blog/post/%E5%8A%A0%E5%AF%86%E6%96%87%E7%AB%A0%E6%B5%8B%E8%AF%95/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>视频播放器测试</title>
      <link>https://ranmaxli.gitee.io/blog/post/%E8%A7%86%E9%A2%91%E6%92%AD%E6%94%BE%E5%99%A8%E6%B5%8B%E8%AF%95/</link>
      <guid>https://ranmaxli.gitee.io/blog/post/%E8%A7%86%E9%A2%91%E6%92%AD%E6%94%BE%E5%99%A8%E6%B5%8B%E8%AF%95/</guid>
      <pubDate>Sun, 29 May 2022 13:19:34 GMT</pubDate>
      
        
        
          
          
      <description>&lt;div id=&quot;dp,dplayer&quot;&gt;播放器加载中......&lt;/div&gt;
&lt;script&gt;
//立即执行函数
(
    function () {
        import(&#39;https://jsd.cxl2020mc.top/npm/dplayer/+esm&#39;)
</description>
          
        
      
      
      
      <content:encoded><![CDATA[<div id="dp,dplayer">播放器加载中......</div><script>//立即执行函数(    function () {        import('https://jsd.cxl2020mc.top/npm/dplayer/+esm')            .then((module) => {                // Do something with the module.                // const dp,dplayer = new DPlayer({                const Dplayer = module.default                const dp,dplayer = new Dplayer({                    container: document.getElementById('dp,dplayer'),                    video: {    url: 'https://file.cxl2020mc.top/api/raw/?path=/mc1.mp4',}                });            });    })();</script><div id="dp2,dplayer2">播放器加载中......</div><script>//立即执行函数(    function () {        import('https://jsd.cxl2020mc.top/npm/dplayer/+esm')            .then((module) => {                // Do something with the module.                // const dp2,dplayer2 = new DPlayer({                const Dplayer = module.default                const dp2,dplayer2 = new Dplayer({                    container: document.getElementById('dp2,dplayer2'),                    video: {    url: 'https://file.cxl2020mc.top/api/raw/?path=/video/%E3%80%8A%E5%8E%9F%E7%A5%9E%E3%80%8B%E5%89%A7%E6%83%85PV-%E3%80%8C%E7%A5%9E%E5%A5%B3%E5%8A%88%E8%A7%82%E3%80%8D.mp4',}                });            });    })();</script><h1 id="leancloud-节点"><a class="markdownIt-Anchor" href="#leancloud-节点"></a> leancloud 节点</h1><div id="dp3,dplayer3">播放器加载中......</div><script>//立即执行函数(    function () {        import('https://jsd.cxl2020mc.top/npm/dplayer/+esm')            .then((module) => {                // Do something with the module.                // const dp3,dplayer3 = new DPlayer({                const Dplayer = module.default                const dp3,dplayer3 = new Dplayer({                    container: document.getElementById('dp3,dplayer3'),                    video: {    url: 'https://lc-gluttony.s3.amazonaws.com/eABALL5rKFsL/3gYXrErAjxViR2JJ8vW0r1AKPPWulrJ7/%E3%80%8A%E5%8E%9F%E7%A5%9E%E3%80%8B%E9%A1%BB%E5%BC%A5%E5%89%8D%E7%9E%BB%E7%9F%AD%E7%89%8701%E2%80%94%E2%80%94%E7%A5%9E%E5%A5%87%E7%9A%84%E8%8D%89%E5%85%83%E7%B4%A0.%E3%80%8A%E5%8E%9F%E7%A5%9E%E3%80%8B%E9%A1%BB%E5%BC%A5%E5%89%8D%E7%9E%BB%E7%9F%AD%E7%89%8701%E2%80%94%E2%80%94%E7%A5%9E%E5%A5%87%E7%9A%84%E8%8D%89%E5%85%83%E7%B4%A0.767598357.mp4',}                });            });    })();</script><h1 id="p2p测试"><a class="markdownIt-Anchor" href="#p2p测试"></a> p2p测试</h1><blockquote><p>打开多个标签页试试<br />使用之前先刷新加载js（没放头里。。。。。而且有pjax）</p></blockquote><script src="https://cxl2020mc-1304820025.file.myqcloud.com/npm/cdnbye-mp4@latest"></script><div id="dplayer4"></div><div id="stats"></div><script>    var _peerId = '', _peerNum = 0, _totalP2PDownloaded = 0, _totalP2PUploaded = 0;    var type = 'normal';    if(P2PEngineMp4.isSupported()) {        type = 'customMp4';    }    const dp4 = new DPlayer({        container: document.getElementById('dplayer4'),        //autoplay: true,        video: {            url: 'https://file.cxl2020mc.top/api/raw/?path=/mc1.mp4',            type: type,            hotkey: true,        // 移动端全屏时向右划动快进，向左划动快退。            customType: {                'customMp4': function (video, player) {                    var mp4 = new P2PEngineMp4(video, {                        autoplay: true,                    });                    mp4.loadSource(video.src);                    mp4.on('stats', function (stats) {                        _totalP2PDownloaded = stats.totalP2PDownloaded;                        _totalP2PUploaded = stats.totalP2PUploaded;                        updateStats();                    }).on('peerId', function (peerId) {                        _peerId = peerId;                    }).on('peers', function (peers) {                        _peerNum = peers.length;                        updateStats();                    });                }            }        }    });    function updateStats() {        var text = 'P2P正在为您加速' + (_totalP2PDownloaded/1024).toFixed(2)            + 'MB 已分享' + (_totalP2PUploaded/1024).toFixed(2) + 'MB' + ' 连接节点' + _peerNum + '个';        document.getElementById('stats').innerText = text    }</script>]]></content:encoded>
      
      
      
      
      <comments>https://ranmaxli.gitee.io/blog/post/%E8%A7%86%E9%A2%91%E6%92%AD%E6%94%BE%E5%99%A8%E6%B5%8B%E8%AF%95/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>夏日炎炎</title>
      <link>https://ranmaxli.gitee.io/blog/post/%E5%A4%8F%E6%97%A5%E7%82%8E%E7%82%8E/</link>
      <guid>https://ranmaxli.gitee.io/blog/post/%E5%A4%8F%E6%97%A5%E7%82%8E%E7%82%8E/</guid>
      <pubDate>Mon, 23 May 2022 11:52:48 GMT</pubDate>
      
        
        
          
          
      <description>&lt;p&gt;手机所拍，画质感人&lt;br /&gt;
&lt;img src=&quot;https://cxl2020mc-1304820025.file.myqcloud.com/file/20210730080549.jpg&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;
&lt;img</description>
          
        
      
      
      
      <content:encoded><![CDATA[<p>手机所拍，画质感人<br /><img src="https://cxl2020mc-1304820025.file.myqcloud.com/file/20210730080549.jpg" alt="" /><br /><img src="https://cxl2020mc-1304820025.file.myqcloud.com/file/20210730080827.jpg" alt="" /><br /><img src="https://cxl2020mc-1304820025.file.myqcloud.com/file/20210730081052.jpg" alt="" /><br /><img src="https://cxl2020mc-1304820025.file.myqcloud.com/file/20210730081221.jpg" alt="" /></p><!-- ![](https://cxl2020mc-1304820025.file.myqcloud.com/file/20210730081310.jpg) --><p><img src="https://cxl2020mc-1304820025.file.myqcloud.com/file/20210730081346.jpg" alt="" /><br /><img src="https://cxl2020mc-1304820025.file.myqcloud.com/file/20210730081414.jpg" alt="" /><br /><img src="https://cxl2020mc-1304820025.file.myqcloud.com/file/20210730081434.jpg" alt="" /></p><!-- ![](https://cxl2020mc-1304820025.file.myqcloud.com/file/20210730081511.jpg)![](https://cxl2020mc-1304820025.file.myqcloud.com/file/20210730081603.jpg)![](https://cxl2020mc-1304820025.file.myqcloud.com/file/20210730082043.jpg)![](https://cxl2020mc-1304820025.file.myqcloud.com/file/20210730083117.jpg)![](https://cxl2020mc-1304820025.file.myqcloud.com/file/20210730083303.jpg)![](https://cxl2020mc-1304820025.file.myqcloud.com/file/20210730083357.jpg)![](https://cxl2020mc-1304820025.file.myqcloud.com/file/20210730083456.jpg) --><p><img src="https://cxl2020mc-1304820025.file.myqcloud.com/file/20210730083546.jpg" alt="" /><br /><img src="https://cxl2020mc-1304820025.file.myqcloud.com/file/20210730083656.jpg" alt="" /><br /><img src="https://cxl2020mc-1304820025.file.myqcloud.com/file/20210730083749.jpg" alt="" /><br /><img src="https://cxl2020mc-1304820025.file.myqcloud.com/file/20210730083835.jpg" alt="" /></p>]]></content:encoded>
      
      
      
      
      <comments>https://ranmaxli.gitee.io/blog/post/%E5%A4%8F%E6%97%A5%E7%82%8E%E7%82%8E/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>markdown语法</title>
      <link>https://ranmaxli.gitee.io/blog/post/markdonw%E8%AF%AD%E6%B3%95/</link>
      <guid>https://ranmaxli.gitee.io/blog/post/markdonw%E8%AF%AD%E6%B3%95/</guid>
      <pubDate>Mon, 23 May 2022 11:39:21 GMT</pubDate>
      
        
        
          
          
      <description>&lt;h2 id=&quot;关于markdown来自百度百科&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#关于markdown来自百度百科&quot;&gt;&lt;/a&gt;</description>
          
        
      
      
      
      <content:encoded><![CDATA[<h2 id="关于markdown来自百度百科"><a class="markdownIt-Anchor" href="#关于markdown来自百度百科"></a> 关于Markdown（来自百度百科）</h2><p>Markdown是一种轻量级标记语言，创始人为约翰·格鲁伯（英语：John Gruber）。 它允许人们使用易读易写的纯文本格式编写文档，然后转换成有效的XHTML（或者HTML）文档。这种语言吸收了很多在电子邮件中已有的纯文本标记的特性。<br />由于Markdown的轻量化、易读易写特性，并且对于图片，图表、数学式都有支持，目前许多网站都广泛使用Markdown来撰写帮助文档或是用于论坛上发表消息。 如GitHub、Reddit、Diaspora、Stack Exchange、OpenStreetMap 、SourceForge、简书等，甚至还能被使用来撰写电子书。</p><h2 id="编辑器推荐"><a class="markdownIt-Anchor" href="#编辑器推荐"></a> 编辑器推荐</h2><p><a href="https://www.typora.io/">Typora</a><br /><a href="https://typoraio.cn/">Typora中国站</a><br /><img src="https://cxl2020mc-1304820025.file.myqcloud.com/file/typora_icon.png" alt="" /><br /><a href="https://www.typora.io/#download">下载地址</a><br /><a href="https://typoraio.cn/">中国站下载地址</a><br /><img src="https://cxl2020mc-1304820025.file.myqcloud.com/file/typora.png" alt="" /><br /><img src="https://cxl2020mc-1304820025.file.myqcloud.com/file/202205081120116.gif" alt="" /></p><h2 id="语法"><a class="markdownIt-Anchor" href="#语法"></a> 语法</h2><h3 id="标题最多6级"><a class="markdownIt-Anchor" href="#标题最多6级"></a> 标题（最多6级）</h3><p>注意：#和标题要间隔一空格</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 一级标题</span><br><span class="line">## 二级标题</span><br><span class="line">### 三级标题</span><br><span class="line">#### 四级标题</span><br><span class="line">##### 五级标题</span><br><span class="line">###### 六级标题</span><br></pre></td></tr></table></figure><h3 id="文字样式"><a class="markdownIt-Anchor" href="#文字样式"></a> 文字样式</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">*斜体*</span><br><span class="line">**加粗**</span><br><span class="line">***斜体加粗***</span><br><span class="line">~~删除线~~</span><br><span class="line">==高亮==</span><br></pre></td></tr></table></figure><p><em>斜体</em><br /><strong>加粗</strong><br /><em><strong>斜体加粗</strong></em><br /><s>删除线</s><br /><mark>高亮</mark></p><h3 id="引用"><a class="markdownIt-Anchor" href="#引用"></a> 引用</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;这是引用</span><br><span class="line">&gt;&gt;这是引用</span><br><span class="line">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;这还是引用</span><br></pre></td></tr></table></figure><p>效果</p><blockquote><p>这是引用</p><blockquote><p>这是引用</p><blockquote><blockquote><blockquote><blockquote><blockquote><blockquote><blockquote><blockquote><p>这还是引用</p></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote><h3 id="分割线"><a class="markdownIt-Anchor" href="#分割线"></a> 分割线</h3><p>三个或者三个以上的 - 或者 * 都可以。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">----</span><br><span class="line">***</span><br><span class="line">*****</span><br></pre></td></tr></table></figure><hr /><hr /><hr /><hr /><h3 id="插入图片和链接"><a class="markdownIt-Anchor" href="#插入图片和链接"></a> 插入图片和链接</h3><h4 id="图片"><a class="markdownIt-Anchor" href="#图片"></a> 图片</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">![图片alt](图片网址URL &#x27;&#x27;图片title&#x27;&#x27;)</span><br><span class="line"></span><br><span class="line">图片alt就是显示在图片下面的文字，相当于对图片内容的解释。但是本博客没有，可加可不加</span><br><span class="line">图片title是图片的标题，当鼠标移到图片上时显示的内容。title可加可不加</span><br></pre></td></tr></table></figure><p>示例:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">![xxx](https://cxl2020mc-1304820025.file.myqcloud.com/file/202205081115370.jpeg &quot;一张图片&quot;)</span><br><span class="line">注意图片链接后面有空格</span><br></pre></td></tr></table></figure><p><img src="https://cxl2020mc-1304820025.file.myqcloud.com/file/202205081115370.jpeg" alt="xxx" title="一张图片" /></p><h4 id="链接"><a class="markdownIt-Anchor" href="#链接"></a> 链接</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[链接上的文字](网址URL)</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[欢迎来到研发博客━(*｀∀´*)ノ亻!](https://cxl2020mc.github.io)</span><br></pre></td></tr></table></figure><p><a href="https://cxl2020mc.github.io">欢迎来到研发博客━(<em>｀∀´</em>)ノ亻!</a><br />但是Markdown有个缺点就是Markdown原始跳转链接不会新建标签页<br />所以我们要使用Html解决。<br />示例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=&quot;https://cxl2020mc.github.io&quot; target=&quot;_blank&quot;&gt;欢迎来到研发博客━(*｀∀´*)ノ亻!&lt;/a&gt;</span><br></pre></td></tr></table></figure><p>效果：<a href="https://cxl2020mc.github.io" target="_blank">欢迎来到研发博客━(<em>｀∀´</em>)ノ亻!</a></p><h3 id="列表"><a class="markdownIt-Anchor" href="#列表"></a> 列表</h3><p>列表分无序列表,有序列表和待办列表</p><h4 id="无序列表"><a class="markdownIt-Anchor" href="#无序列表"></a> 无序列表</h4><p>无序列表用 - + * 任何一种都可以</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">- 列表1</span><br><span class="line">+ 列表2</span><br><span class="line">* 列表3</span><br><span class="line"></span><br><span class="line">注意：- + * 跟内容之间都要有一个空格</span><br></pre></td></tr></table></figure><p>效果如下</p><ul><li>列表1</li></ul><ul><li>列表2</li></ul><ul><li>列表3<br />如果你多用了几个空格</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-     列表1</span><br><span class="line">+     列表2</span><br><span class="line">*     列表3</span><br></pre></td></tr></table></figure><p>效果如下</p><ul><li><p>列表1</p><ul><li><p>列表2</p><ul><li>列表3</li></ul></li></ul></li></ul><h4 id="有序列表"><a class="markdownIt-Anchor" href="#有序列表"></a> 有序列表</h4><p>数字加点</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1. 列表内容</span><br><span class="line">2. 列表内容</span><br><span class="line">3. 列表内容</span><br><span class="line">注意：序号跟内容之间要有空格</span><br></pre></td></tr></table></figure><ol><li>列表内容</li><li>列表内容</li><li>列表内容<br />数字是可以打乱的，生成会自动排序</li></ol><h4 id="代办列表"><a class="markdownIt-Anchor" href="#代办列表"></a> 代办列表</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">- [ ] 内容</span><br><span class="line">- [x] 内容</span><br></pre></td></tr></table></figure><ul><li>[ ] 内容</li><li>[x] 内容</li></ul><h4 id="列表嵌套"><a class="markdownIt-Anchor" href="#列表嵌套"></a> 列表嵌套</h4><p>上一级和下一级之间敲三个空格即可</p><h2 id="表格"><a class="markdownIt-Anchor" href="#表格"></a> 表格</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">表头|表头|表头</span><br><span class="line">|---|:--:|---:|</span><br><span class="line">|内容|内容|内容|</span><br><span class="line">|内容|内容|内容|</span><br><span class="line"></span><br><span class="line">第二行分割表头和内容。</span><br><span class="line">- 有一个就行，为了看着舒服，多加了几个。文字默认居左。</span><br><span class="line">-两边加：表示文字居中</span><br><span class="line">-右边加：表示文字居右</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">博客网站</span><br><span class="line">|名称|网址|xxx|</span><br><span class="line">|--|:--:|--:|</span><br><span class="line">|研发博客|https://cxl2020mc.github.io|xxx|</span><br><span class="line">|高浩轩|https://hkjyh5.coding-pages.com/|xxx|</span><br></pre></td></tr></table></figure><p>博客网站</p><table><thead><tr><th style="text-align:left">名称</th><th style="text-align:center">网址</th><th style="text-align:right">xxx</th></tr></thead><tbody><tr><td style="text-align:left">研发博客</td><td style="text-align:center"><a href="https://cxl2020mc.github.io">https://cxl2020mc.github.io</a></td><td style="text-align:right">xxx</td></tr><tr><td style="text-align:left">高浩轩</td><td style="text-align:center"><a href="https://hkjyh5.coding-pages.com">https://hkjyh5.coding-pages.com</a></td><td style="text-align:right">xxx</td></tr></tbody></table><h2 id="代码"><a class="markdownIt-Anchor" href="#代码"></a> 代码</h2><h3 id="单行代码代码用一个反引号包起来"><a class="markdownIt-Anchor" href="#单行代码代码用一个反引号包起来"></a> 单行代码：代码用一个反引号包起来</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">`代码内容`</span><br></pre></td></tr></table></figure><p>代码块：代码用三个反引号包起来，且两边的反引号单独占一行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">(```)  注：这里可以在加编程语言如：java</span><br><span class="line">代码...</span><br><span class="line">代码...</span><br><span class="line">代码...</span><br><span class="line">(```)</span><br></pre></td></tr></table></figure><p>注：为了防止转译，前后三个反引号处加了小括号。</p><h2 id="缩略"><a class="markdownIt-Anchor" href="#缩略"></a> 缩略</h2><p>缩略有2种一种可以使用Markdown，HTML，一种不可以但是支持HTML</p><h3 id="可以使用markdownhtml"><a class="markdownIt-Anchor" href="#可以使用markdownhtml"></a> 可以使用Markdown，HTML</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;details&gt;</span><br><span class="line">  &lt;summary&gt;文字&lt;/summary&gt;</span><br><span class="line">内容</span><br><span class="line">&lt;/details&gt;</span><br></pre></td></tr></table></figure><p>效果</p><details>  <summary>文字</summary>内容</details><h3 id="不可以使用markdown支持html"><a class="markdownIt-Anchor" href="#不可以使用markdown支持html"></a> 不可以使用Markdown，支持HTML</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;details&gt;</span><br><span class="line">  &lt;summary&gt;文字&lt;/summary&gt;</span><br><span class="line">  &lt;pre&gt;</span><br><span class="line">    &lt;ul&gt;</span><br><span class="line">内容</span><br><span class="line">    &lt;/ul&gt;</span><br><span class="line">  &lt;/pre&gt;</span><br><span class="line">&lt;/details&gt;</span><br></pre></td></tr></table></figure><p>效果</p><details>  <summary>文字</summary>  <pre>    <ul>内容    </ul>  </pre></details><h3 id="butterfly主题专用"><a class="markdownIt-Anchor" href="#butterfly主题专用"></a> butterfly主题专用</h3><p>本站使用butterfly主题支持标签外挂<br />格式：</p><blockquote><p>( display 不能包含英文逗号，可用‚)</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% hideToggle display,bg,color %&#125; </span><br><span class="line">content </span><br><span class="line">&#123;% endhideToggle %&#125;</span><br></pre></td></tr></table></figure><p>示例</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% hideToggle 文字%&#125;</span><br><span class="line">内容</span><br><span class="line">&#123;% endhideToggle %&#125;</span><br></pre></td></tr></table></figure><details class="toggle" ><summary class="toggle-button" style="">文字</summary><div class="toggle-content"><p>内容</p></div></details><h2 id="网页编辑器"><a class="markdownIt-Anchor" href="#网页编辑器"></a> 网页编辑器</h2><h3 id="editormd"><a class="markdownIt-Anchor" href="#editormd"></a> <a href="http://Editor.md">Editor.md</a></h3><p><a href="http://editor.md.ipandao.com/">Editor.md</a><br /><img src="https://cxl2020mc-1304820025.file.myqcloud.com/file/Editor.md.png" alt="" /></p>]]></content:encoded>
      
      
      
      
      <comments>https://ranmaxli.gitee.io/blog/post/markdonw%E8%AF%AD%E6%B3%95/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>python一次性更新所有库</title>
      <link>https://ranmaxli.gitee.io/blog/post/python%E4%B8%80%E6%AC%A1%E6%80%A7%E6%9B%B4%E6%96%B0%E6%89%80%E6%9C%89%E5%BA%93/</link>
      <guid>https://ranmaxli.gitee.io/blog/post/python%E4%B8%80%E6%AC%A1%E6%80%A7%E6%9B%B4%E6%96%B0%E6%89%80%E6%9C%89%E5%BA%93/</guid>
      <pubDate>Mon, 23 May 2022 11:39:21 GMT</pubDate>
      
        
        
          
          
      <description>&lt;p&gt;&lt;img src=&quot;https://cxl2020mc-1304820025.file.myqcloud.com/file/20210619144249.jpeg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;h1 id=&quot;当python用久了就会有一大堆有更新的库&quot;&gt;&lt;a</description>
          
        
      
      
      
      <content:encoded><![CDATA[<p><img src="https://cxl2020mc-1304820025.file.myqcloud.com/file/20210619144249.jpeg" alt="" /></p><h1 id="当python用久了就会有一大堆有更新的库"><a class="markdownIt-Anchor" href="#当python用久了就会有一大堆有更新的库"></a> 当python用久了，就会有一大堆有更新的库</h1><h2 id="检查更新命令"><a class="markdownIt-Anchor" href="#检查更新命令"></a> 检查更新命令</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip list --outdated</span><br></pre></td></tr></table></figure><p>像我这样<br /><img src="https://cxl2020mc-1304820025.file.myqcloud.com/file/20210619142223.png" alt="" /><br /><img src="https://cxl2020mc-1304820025.file.myqcloud.com/file/20210619142316.png" alt="" /><br /><img src="https://cxl2020mc-1304820025.file.myqcloud.com/file/20210619142345.png" alt="" /></p><p>pip的功能只能一个一个更新</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install -U 模块名</span><br></pre></td></tr></table></figure><h2 id="开始"><a class="markdownIt-Anchor" href="#开始"></a> 开始</h2><p>先使用清华源（使用管理员身份运行）<br /><a href="https://mirrors.tuna.tsinghua.edu.cn/help/pypi/"><img src="https://cxl2020mc-1304820025.file.myqcloud.com/file/20210619144441.png" alt="" /></a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">:: 更新pip</span><br><span class="line">pip install -i https://pypi.tuna.tsinghua.edu.cn/simple pip -U</span><br><span class="line">:: 设为默认</span><br><span class="line">pip config set global.index-url https://pypi.tuna.tsinghua.edu.cn/simple</span><br></pre></td></tr></table></figure><h3 id="然后安装我们的主角pip-review"><a class="markdownIt-Anchor" href="#然后安装我们的主角pip-review"></a> 然后安装我们的主角：pip-review</h3><p>安装pip-review。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install pip-review</span><br></pre></td></tr></table></figure><h4 id="更新命令因为要获取所有更新内容启动要一点时间"><a class="markdownIt-Anchor" href="#更新命令因为要获取所有更新内容启动要一点时间"></a> 更新命令：(因为要获取所有更新内容，启动要一点时间)</h4><div class="tabs" id="test2"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test2-1">全自动更新所有库</button></li><li class="tab"><button type="button" data-href="#test2-2">第二种方法(可以选择更新哪个)</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test2-1"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip-review --auto</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test2-2"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip-review --local --interactive</span><br></pre></td></tr></table></figure><p>运行（建议使用管理员身份运行）<br /><img src="https://cxl2020mc-1304820025.file.myqcloud.com/file/20210619143505.png" alt="" /><br />输入：A更新所有库<br /><img src="https://cxl2020mc-1304820025.file.myqcloud.com/file/20210619143610.png" alt="" /><br /><img src="https://cxl2020mc-1304820025.file.myqcloud.com/file/20210619143729.png" alt="" /></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><p>剩下的只有耐心等待<br /><img src="https://cxl2020mc-1304820025.file.myqcloud.com/file/gq.gif" alt="" /></p>]]></content:encoded>
      
      
      
      <category domain="https://ranmaxli.gitee.io/blog/tags/python/">python</category>
      
      
      <comments>https://ranmaxli.gitee.io/blog/post/python%E4%B8%80%E6%AC%A1%E6%80%A7%E6%9B%B4%E6%96%B0%E6%89%80%E6%9C%89%E5%BA%93/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>AGbot介绍</title>
      <link>https://ranmaxli.gitee.io/blog/post/AGbot%E4%BB%8B%E7%BB%8D/</link>
      <guid>https://ranmaxli.gitee.io/blog/post/AGbot%E4%BB%8B%E7%BB%8D/</guid>
      <pubDate>Fri, 13 May 2022 13:17:15 GMT</pubDate>
      
        
        
          
          
      <description>&lt;h1 id=&quot;简介&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#简介&quot;&gt;&lt;/a&gt;</description>
          
        
      
      
      
      <content:encoded><![CDATA[<h1 id="简介"><a class="markdownIt-Anchor" href="#简介"></a> 简介</h1><p>AGbot为研发人员自己制作的腾讯QQ机器人</p><p>支持好多好多功能</p><blockquote><p><s>也有好多好多bug</s></p></blockquote><p>赶稿ing…</p>]]></content:encoded>
      
      
      <category domain="https://ranmaxli.gitee.io/blog/categories/python/">python</category>
      
      <category domain="https://ranmaxli.gitee.io/blog/categories/python/AGbot/">AGbot</category>
      
      
      <category domain="https://ranmaxli.gitee.io/blog/tags/python/">python</category>
      
      <category domain="https://ranmaxli.gitee.io/blog/tags/AGbot/">AGbot</category>
      
      
      <comments>https://ranmaxli.gitee.io/blog/post/AGbot%E4%BB%8B%E7%BB%8D/#disqus_thread</comments>
      
    </item>
    
  </channel>
</rss>
